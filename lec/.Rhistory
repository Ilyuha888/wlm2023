mutate(name = as.numeric(name)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 2, color = "blue")
dice %>%
map(mean) %>%
as_tibble() %>%
pivot_longer(cols = everything()) %>%
mutate(name = as.numeric(name)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue")
dice %>%
map(mean) %>%
as_tibble() %>%
pivot_longer(cols = everything()) %>%
mutate(name = as.numeric(name)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue") +
geom_hline(yintercept = c(3.7, 3.2),
linetype = "dashed", color = "blue") +
```
dice %>%
map(mean) %>%
as_tibble() %>%
pivot_longer(cols = everything()) %>%
mutate(name = as.numeric(name)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue") +
geom_hline(yintercept = 3.7,
linetype = "dashed", color = "blue") +
geom_hline(yintercept = 3.2,
linetype = "dashed", color = "blue")
dice %>%
map(mean) %>%
as_tibble() %>%
pivot_longer(cols = everything()) %>%
mutate(name = as.numeric(name)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue") +
geom_hline(yintercept = 3.7,
linetype = "dashed", color = "blue") +
geom_hline(yintercept = 3.2,
linetype = "dashed", color = "blue") +
labs(x = "n", y = TeX("$\\hat{\\theta}$"))
# dice <- list()
# for (i in 1:1000) {
#   dice[[i]] <- sample(1:6, i, replace = TRUE)
# }
# names(dice) = 1:1000
# dice %>%
#   map(mean) %>%
#   as_tibble() %>%
#   pivot_longer(cols = everything()) %>%
#   mutate(name = as.numeric(name)) %>%
tibble(name = 1:1000,
value = sample(1:6, 1000)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue") +
geom_hline(yintercept = 3.7,
linetype = "dashed", color = "blue") +
geom_hline(yintercept = 3.2,
linetype = "dashed", color = "blue") +
labs(x = "n", y = TeX("$\\hat{\\theta}$"))
# dice <- list()
# for (i in 1:1000) {
#   dice[[i]] <- sample(1:6, i, replace = TRUE)
# }
# names(dice) = 1:1000
# dice %>%
#   map(mean) %>%
#   as_tibble() %>%
#   pivot_longer(cols = everything()) %>%
#   mutate(name = as.numeric(name)) %>%
tibble(name = 1:1000,
value = sample(1:6, 1000, replace = TRUE)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue") +
geom_hline(yintercept = 3.7,
linetype = "dashed", color = "blue") +
geom_hline(yintercept = 3.2,
linetype = "dashed", color = "blue") +
labs(x = "n", y = TeX("$\\hat{\\theta}$"))
# dice <- list()
# for (i in 1:1000) {
#   dice[[i]] <- sample(1:6, i, replace = TRUE)
# }
# names(dice) = 1:1000
# dice %>%
#   map(mean) %>%
#   as_tibble() %>%
#   pivot_longer(cols = everything()) %>%
#   mutate(name = as.numeric(name)) %>%
tibble(name = 1:1000,
value = rnorm(1000, 3.5, 3 replace = TRUE)) %>%
# dice <- list()
# for (i in 1:1000) {
#   dice[[i]] <- sample(1:6, i, replace = TRUE)
# }
# names(dice) = 1:1000
# dice %>%
#   map(mean) %>%
#   as_tibble() %>%
#   pivot_longer(cols = everything()) %>%
#   mutate(name = as.numeric(name)) %>%
tibble(name = 1:1000,
value = rnorm(1000, 3.5, 3)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue") +
geom_hline(yintercept = 3.7,
linetype = "dashed", color = "blue") +
geom_hline(yintercept = 3.2,
linetype = "dashed", color = "blue") +
labs(x = "n", y = TeX("$\\hat{\\theta}$"))
# dice <- list()
# for (i in 1:1000) {
#   dice[[i]] <- sample(1:6, i, replace = TRUE)
# }
# names(dice) = 1:1000
# dice %>%
#   map(mean) %>%
#   as_tibble() %>%
#   pivot_longer(cols = everything()) %>%
#   mutate(name = as.numeric(name)) %>%
tibble(name = 1:1000,
value = rnorm(1000, 3.5, 3)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue") +
geom_hline(yintercept = 4.,
linetype = "dashed", color = "blue") +
geom_hline(yintercept = 2,
linetype = "dashed", color = "blue") +
labs(x = "n", y = TeX("$\\hat{\\theta}$"))
# dice <- list()
# for (i in 1:1000) {
#   dice[[i]] <- sample(1:6, i, replace = TRUE)
# }
# names(dice) = 1:1000
# dice %>%
#   map(mean) %>%
#   as_tibble() %>%
#   pivot_longer(cols = everything()) %>%
#   mutate(name = as.numeric(name)) %>%
tibble(name = 1:1000,
value = rnorm(1000, 3.5, 3)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue") +
geom_hline(yintercept = 5,
linetype = "dashed", color = "blue") +
geom_hline(yintercept = 2,
linetype = "dashed", color = "blue") +
labs(x = "n", y = TeX("$\\hat{\\theta}$"))
dice %>%
map(mean) %>%
as_tibble() %>%
pivot_longer(cols = everything()) %>%
mutate(name = as.numeric(name)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue") +
geom_hline(yintercept = 3.7,
linetype = "dashed", color = "blue") +
geom_hline(yintercept = 3.3,
linetype = "dashed", color = "blue") +
annotate(geom = "text",
x = 1000, y = 3.7,
label = TeX("$\\theta$"),
color = "blue")
dice %>%
map(mean) %>%
as_tibble() %>%
pivot_longer(cols = everything()) %>%
mutate(name = as.numeric(name)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue") +
geom_hline(yintercept = 3.7,
linetype = "dashed", color = "blue") +
geom_hline(yintercept = 3.3,
linetype = "dashed", color = "blue") +
annotate(geom = "text",
x = 1000, y = 3.6,
label = TeX("$\\theta$"),
color = "blue")
dice %>%
map(mean) %>%
as_tibble() %>%
pivot_longer(cols = everything()) %>%
mutate(name = as.numeric(name)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue") +
geom_hline(yintercept = 3.7,
linetype = "dashed", color = "blue") +
geom_hline(yintercept = 3.3,
linetype = "dashed", color = "blue") +
annotate(geom = "text",
x = 1005, y = 3.6,
label = TeX("$\\theta$"),
color = "blue")
dice %>%
map(mean) %>%
as_tibble() %>%
pivot_longer(cols = everything()) %>%
mutate(name = as.numeric(name)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue") +
geom_hline(yintercept = 3.7,
linetype = "dashed", color = "blue") +
geom_hline(yintercept = 3.3,
linetype = "dashed", color = "blue") +
annotate(geom = "text",
x = 1010, y = 3.6,
label = TeX("$\\theta$"),
color = "blue")
tibble(name = 1:1000,
value = rnorm(1000, 3.5, 3)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue") +
geom_hline(yintercept = 5,
linetype = "dashed", color = "blue") +
geom_hline(yintercept = 2,
linetype = "dashed", color = "blue") +
annotate(geom = "text",
x = 1010, y = 3.6,
label = TeX("$\\theta$"),
color = "blue") +
labs(x = "n", y = TeX("$\\hat{\\theta}$"))
tibble(name = 1:1000,
value = rnorm(1000, 3.5, 3)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue") +
geom_hline(yintercept = 5,
linetype = "dashed", color = "blue") +
geom_hline(yintercept = 2,
linetype = "dashed", color = "blue") +
annotate(geom = "text",
x = 1010, y = 4,
label = TeX("$\\theta$"),
color = "blue") +
labs(x = "n", y = TeX("$\\hat{\\theta}$"))
dice %>%
map(mean) %>%
as_tibble() %>%
pivot_longer(cols = everything()) %>%
mutate(name = as.numeric(name)) %>%
ggplot(aes(name, value)) +
geom_line() +
geom_hline(yintercept = 3.5,
size = 1, color = "blue") +
geom_hline(yintercept = 3.7,
linetype = "dashed", color = "blue") +
geom_hline(yintercept = 3.3,
linetype = "dashed", color = "blue") +
annotate(geom = "text",
x = 1010, y = 3.6,
label = TeX("$\\theta$"),
color = "blue") +
labs(x = "n", y = TeX("$\\hat{\\theta}$"))
ggplot() +
geom_function(fun = dnorm, args = list(mean = 100, sd = 15)) +
geom_vline(xintercept = 100,
linetype = "dashed") +
xlim(30, 170)
ggplot() +
geom_function(fun = dnorm, args = list(mean = 100, sd = 15)) +
geom_vline(xintercept = 100,
linetype = "dashed") +
xlim(30, 170) +
labs(x = "IQ", y = "Density")
ggplot() +
geom_function(fun = dnorm, args = list(mean = 100, sd = 15)) +
geom_vline(xintercept = 100,
linetype = "dashed") +
xlim(30, 170) +
labs(x = "IQ", y = "Density")
matrix(rnorm(50 * 12, 100, 15), ncol = 12) %>%
as_tibble() %>%
pivot_longer(cols = everything()) %>%
mutate(name = str_replace(name, "V", "sample ") %>%
factor(ordered = TRUE, levels = paste("sample", 1:12))) -> iq_sim
iq_sim %>%
ggplot(aes(value)) +
geom_histogram(binwidth = 3, fill = 'gray50') +
geom_vline(data = iq_sim %>%
summarise(mean = mean(value),
.by = name),
aes(xintercept = mean)) +
facet_wrap(~ name, ncol = 4, scales = "free_x") +
labs(x = 'IQ',
y = 'Count')
matrix(rnorm(100 * 1000, 100, 15), ncol = 1000) %>%
apply(2, mean)
matrix(rnorm(100 * 1000, 100, 15), ncol = 1000) %>%
apply(2, mean) %>%
tibble(x = .) %>% print()
matrix(rnorm(100 * 1000, 100, 15), ncol = 1000) %>%
apply(2, mean) %>%
tibble(x = .) %>%
# pivot_longer(cols = everything()) %>%
ggplot(aes(x)) +
geom_histogram(binwidth = 3, fill = 'gray50') +
geom_vline(data = iq_sim %>%
summarise(mean = mean(value),
.by = name),
aes(xintercept = mean)) +
facet_wrap(~ name, ncol = 4, scales = "free_x") +
labs(x = 'IQ',
y = 'Count')
matrix(rnorm(100 * 1000, 100, 15), ncol = 1000) %>%
apply(2, mean) %>%
tibble(x = .) %>%
# pivot_longer(cols = everything()) %>%
ggplot(aes(x)) +
geom_histogram(binwidth = 3, fill = 'gray50') +
# geom_vline(data = iq_sim %>%
#              summarise(mean = mean(value),
#                        .by = name),
#            aes(xintercept = mean)) +
facet_wrap(~ name, ncol = 4, scales = "free_x") +
labs(x = 'Mean',
y = 'Count')
matrix(rnorm(100 * 1000, 100, 15), ncol = 1000) %>%
apply(2, mean) %>%
tibble(x = .) %>%
# pivot_longer(cols = everything()) %>%
ggplot(aes(x)) +
geom_histogram(binwidth = 3, fill = 'gray50') +
# geom_vline(data = iq_sim %>%
#              summarise(mean = mean(value),
#                        .by = name),
#            aes(xintercept = mean)) +
# facet_wrap(~ name, ncol = 4, scales = "free_x") +
labs(x = 'Mean',
y = 'Count')
matrix(rnorm(100 * 1000, 100, 15), ncol = 1000) %>%
apply(2, mean) %>%
tibble(x = .) %>%
# pivot_longer(cols = everything()) %>%
ggplot(aes(x)) +
geom_histogram(fill = 'gray50') +
# geom_vline(data = iq_sim %>%
#              summarise(mean = mean(value),
#                        .by = name),
#            aes(xintercept = mean)) +
# facet_wrap(~ name, ncol = 4, scales = "free_x") +
labs(x = 'Mean',
y = 'Count')
matrix(rnorm(100 * 1000, 100, 15), ncol = 1000) %>%
apply(2, mean) %>%
tibble(x = .) %>%
# pivot_longer(cols = everything()) %>%
ggplot(aes(x)) +
geom_histogram(fill = 'gray50') +
geom_vline(xintercept = mean(x)) +
# geom_vline(data = iq_sim %>%
#              summarise(mean = mean(value),
#                        .by = name),
#            aes(xintercept = mean)) +
# facet_wrap(~ name, ncol = 4, scales = "free_x") +
labs(x = 'Mean',
y = 'Count')
matrix(rnorm(100 * 1000, 100, 15), ncol = 1000) %>%
apply(2, mean) %>%
tibble(x = .) %>%
# pivot_longer(cols = everything()) %>%
ggplot(aes(x)) +
geom_histogram(fill = 'gray50') +
geom_vline(aes(xintercept = mean(x))) +
# geom_vline(data = iq_sim %>%
#              summarise(mean = mean(value),
#                        .by = name),
#            aes(xintercept = mean)) +
# facet_wrap(~ name, ncol = 4, scales = "free_x") +
labs(x = 'Mean',
y = 'Count')
set.seed(123)
matrix(rnorm(100 * 1000, 100, 15), ncol = 1000) %>%
apply(2, mean) %>%
tibble(x = .) %>%
# pivot_longer(cols = everything()) %>%
ggplot(aes(x)) +
geom_histogram(fill = 'gray50') +
geom_vline(aes(xintercept = mean(x))) +
labs(x = 'Mean',
y = 'Count')
# pivot_longer(cols = everything()) %>%
iq_sim2 %>%
ggplot(aes(x)) +
geom_histogram(fill = 'gray50') +
geom_vline(aes(xintercept = mean(x))) +
labs(x = 'Mean',
y = 'Count')
set.seed(123)
matrix(rnorm(100 * 1000, 100, 15), ncol = 1000) %>%
apply(2, mean) %>%
tibble(x = .) -> iq_sim2
# pivot_longer(cols = everything()) %>%
iq_sim2 %>%
ggplot(aes(x)) +
geom_histogram(fill = 'gray50') +
geom_vline(aes(xintercept = mean(x))) +
labs(x = 'Mean',
y = 'Count')
round(sd(iq_sim2$x), 2)
100-1.43
100+1.43
tibble(x = seq(-3.5, 3.5, by = .01),
y = dnorm(x)) -> st_norm
st_norm %>%
ggplot(aes(x, y)) +
geom_area(data = st_norm %>% filter(x > -1.96 & x <= 1.96),
fill = "royalblue", alpha = .5) +
# geom_area(data = st_norm %>% filter(x > -2 & x <= -1),
#           fill = "springgreen", alpha = .5) +
# geom_area(data = st_norm %>% filter(x > 1 & x <= 2),
#           fill = "springgreen", alpha = .5) +
# geom_area(data = st_norm %>% filter(x > -3 & x <= -2),
#           fill = "orange", alpha = .5) +
# geom_area(data = st_norm %>% filter(x > 2 & x <= 3),
#           fill = "orange", alpha = .5) +
# geom_area(data = st_norm %>% filter(x <= -3),
#           fill = "darkred", alpha = .5) +
# geom_area(data = st_norm %>% filter(x >= 3),
#           fill = "darkred", alpha = .5) +
geom_line() +
geom_vline(xintercept = 0, linetype = "dashed") +
geom_vline(xintercept = c(-1.96, 1.96), linetype = "dotted") +
annotate(x = 0,
y = .05,
label = "0.95",
geom = "text") +
labs(x = "Value",
y = "Density")
st_norm %>%
ggplot(aes(x, y)) +
geom_area(data = st_norm %>% filter(x > -1.96 & x <= 1.96),
fill = "royalblue", alpha = .5) +
# geom_area(data = st_norm %>% filter(x > -2 & x <= -1),
#           fill = "springgreen", alpha = .5) +
# geom_area(data = st_norm %>% filter(x > 1 & x <= 2),
#           fill = "springgreen", alpha = .5) +
# geom_area(data = st_norm %>% filter(x > -3 & x <= -2),
#           fill = "orange", alpha = .5) +
# geom_area(data = st_norm %>% filter(x > 2 & x <= 3),
#           fill = "orange", alpha = .5) +
# geom_area(data = st_norm %>% filter(x <= -3),
#           fill = "darkred", alpha = .5) +
# geom_area(data = st_norm %>% filter(x >= 3),
#           fill = "darkred", alpha = .5) +
geom_line() +
geom_vline(xintercept = 0, linetype = "dashed", alpha = .5) +
geom_vline(xintercept = c(-1.96, 1.96), linetype = "dotted") +
annotate(x = 0,
y = .05,
label = "0.95",
geom = "text") +
labs(x = "Value",
y = "Density")
st_norm %>%
ggplot(aes(x, y)) +
geom_area(data = st_norm %>% filter(x > -1.96 & x <= 1.96),
fill = "royalblue", alpha = .5) +
# geom_area(data = st_norm %>% filter(x > -2 & x <= -1),
#           fill = "springgreen", alpha = .5) +
# geom_area(data = st_norm %>% filter(x > 1 & x <= 2),
#           fill = "springgreen", alpha = .5) +
# geom_area(data = st_norm %>% filter(x > -3 & x <= -2),
#           fill = "orange", alpha = .5) +
# geom_area(data = st_norm %>% filter(x > 2 & x <= 3),
#           fill = "orange", alpha = .5) +
# geom_area(data = st_norm %>% filter(x <= -3),
#           fill = "darkred", alpha = .5) +
# geom_area(data = st_norm %>% filter(x >= 3),
#           fill = "darkred", alpha = .5) +
geom_line() +
geom_vline(xintercept = 0, linetype = "dashed", alpha = .5) +
geom_vline(xintercept = c(-1.96, 1.96), linetype = "dotted") +
annotate(x = 0,
y = .05,
label = "0.95",
geom = "text") +
scale_x_continuous(breaks = -3:3) +
labs(x = "Value",
y = "Density")
