{
  "hash": "1f77b5f6349e00499d7dfe776fe62179",
  "result": {
    "markdown": "# Основы R {#rbasics}\n\n## Установка {#rbasics-rinstall}\n\n::: {.lab-chapter .lab-junior}\n:::\n\nЧтобы стать счастливым пользователем R, надо установить на свой комп две программы:\n\n- собственно [R](https://cran.r-project.org/)\n  + на [Win](https://cran.r-project.org/bin/windows/base/)\n  + на [Mac](https://cran.r-project.org/bin/macosx/)\n  + на [Linux](https://cran.rstudio.com/bin/linux/)\n- IDE [RStudio](https://posit.co/download/rstudio-desktop/)[^r-studio]\n\n[^r-studio]: По пути надо ещё не перепутать с [R-Studio](https://www.r-studio.com/ru/), которая восстанавливает данные с диска. Критическое сходство названий двух программ обязывает к повышенной внимательности при написании работ/статей/отчётов/заявок на гранты, в которых вы ссылаетесь на RStudio --- иногда рецензенты весьма недоумевают, как исследователи анализировали данные с помощью ПО для восстановления данных…\n\nПричем во избежание возможных проблем, надо поставить программы именно в это порядке --- сначала R, а потом RStudio, иначе IDE может на найти R и будет ругаться.\n\n### Зачем ставить две проги? {#rbasics-why-we-need-both}\n\nВопрос не безосновательный. В целом, можно обойти и только R --- можно работать на нём хоть из командной строки --- однако это всё же не совсем удобно. Интерфейс самого R довольно скудный и не слишком приветливый.\n\n<center>\n<figure>\n<img src=\"./pics/r-interface.png\">\n<figcaption>Интерфейс R</figcaption>\n</figure>\n</center>\n\nRStudio же, являясь, как уже вскользь отмечалось выше, интегрированной средой разработки (IDE), расширяет возможности R, предоставляет более юзабельный интерфейс для взаимодействия с языком и в целом делает работу с R радостной и приятной. С её интерфейсом и возможностями мы познакомимся далее.\n\nRStudio это не единственная среда для работы с R, но определенно самая удобная и популярная, поэтому мы будем пользоваться именно ею. RStudio является IDE, разработанной специально для работы в R, однако это вовсе не значит, что в ней нельзя использовать другие языки программирования. Например, книжка, которуя вы сейчас читаете, написана с использованием [R](https://www.r-project.org/about.html), [Python](https://www.python.org/), [HTML](http://htmlbook.ru/html), [SASS](https://sass-lang.com/), [JavaScript](https://learn.javascript.ru/), [YAML](https://yaml.org/) и других языков --- при этом вся работа велась в RStudio. Вот такая мощная вещь.\n\n### Что такое IDE? {#rbasics-what-is-ide}\n\nИнтегрированная среда разработки (IDE, integrated development environment) --- это специальная программа, которое предоставляет широкий спектр возможностей для разработки программного обеспечения. Возможно, вы слышали такие слова, как [PyCharm](https://www.jetbrains.com/ru-ru/pycharm/) или [Visual Studio Code](https://code.visualstudio.com/) --- это всё варианты IDE.\n\nОбычно IDE содержит несколько ключевых компонентов:\n\n- текстовый редактор для написания скриптов\n- [транслятор](#appendix_proglang) языка\n- отладчик (debugger)\n- средства автоматизации сборки (build automation tools)\n\nОбычно IDE позволяют работать с несколькими языками программирования (ЯП), но бывают и специализированные.\n\n> И хотя всё ещё присутствует холивар относительного того, является ли R языком программирования (ССЫЛКА), RStudio однозначно можно назвать полноценной IDE, так как разработка в ней вполне может вестить. Пример продукта разработки прямо перед вами --- книжка и другие материалы курса.\n\n\n## Подводные камни установки {#rbasics-installation-problems}\n\n::: {.lab-chapter .lab-junior}\n:::\n\nВ целом, установщики операционных систем обычно хорошо справляются со своей задачей, и в 90% случаев всё стаёт без багов. Однако ниже я оставлю некоторые комментарии о проблемах, с которыми сталкивался сам или о которых говорили знакомые и коллеги.\n\n### Windows {#rbasics-installation-problems-win}\n\nСамая частая проблема --- имя пользователя на кириллице. Компьютер вообще достаточно плохо переваривает кириллические символы. Особенную же проблему составляют такие символы в путях к файлам. Поскольку на Винде папка пользователя называется именем пользователя, то в случае киррилического имени, естественно, её имя будет на кириллице. Это можно пережить, перезадав некоторое дефолтные пути в настройках, однако если есть возможность переименовать пользователя и папку, я бы рекомендовал это сделать. Ну, так, чтобы не было неожиданных внезапностей.\n\n### MacOS {#rbasics-installation-problems-mac}\n\nТут в 99.9% случаев всё ровно. Бывает уже в процессе работы некоторые пакеты жалуются на недоустановленное что-то или на какие-либо несовместимости, но это случается невероятно редко и обычно достаточно легко лечится.\n\n### Linux {#rbasics-installation-problems-linux}\n\nЕсли вы пользователя Linux, значит R с RStudio вы ставили через Terminal. Скорее всего, всё прошло хорошо, и всё работает. Проблемки могут случиться чуть дальше, когда мы будем ставить дополнительные аровские пакеты, в которых будет идти основная наша работа --- R может не найти некоторые системные пакеты. Такая проблема у меня возникла на Ubuntu 22.04 --- помогла команда ниже:\n\n\n\n```{bash rbasics-fix-linux}\n#| eval: false\nPASTE COMMAND HERE\n```\n\n\n\nНекоторое время мы будет знакомиться с базовым R и работать только с нём, но имейте в виду, что тут есть некая команда, которая может пригодится.\n\n\n## Про R {#rbasics-r-about}\n\n::: {.lab-chapter .lab-junior}\n:::\n\n\n\n## Интерфейс RStudio {#rbasics-rstudio-interface}\n\n::: {.lab-chapter .lab-junior}\n:::\n\n",
    "supporting": [
      "rbasics_files"
    ],
    "filters": [],
    "includes": {}
  }
}