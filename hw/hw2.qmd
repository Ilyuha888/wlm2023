# HW2 // Матрицы и списки. Функции и строки {#hw2 .unnumbered}

```{=html}
<!--
REPLACE ALL hw2 TO hw<n> WITH MATCH CASE
-->
```

```{r opts, echo=FALSE}
knitr::opts_chunk$set(echo = FALSE, eval = FALSE, message = FALSE, warning = FALSE)
```


## Основные задания {#hw2_main}

### #1 {#hw2-1-title}

<img id="hw2-1-level" class="level"/>

::: {#hw2-1-task .task}

Сгенерируйте две матрицы, которые будут содержать по 50 выборок, объемом по 70 наблюдений, из генеральной совокупности, в которой распределение некоторого признака подчиняется нормальному распределению (`rnorm()`) с параметрами `mean = 20.5` и `sd = 3.48`. Каждой выборке в матрице должен соответствовать один столбец. Сохраните результаты генерации в перемененые `sim1` и `sim2`.

::: {.callout-warning}
#### Ослабим контроль случайности

Так как задание подразумевает генерацию случайных чисел, для воспроизводимых результатов нужно установить зерно датчика случайных чисел. Однако нам нужно сгенерировать две разные матрицы --- нет смысла работать с двумя одинаковыми. Если же мы установим одинаковое зерно датчика перед обоими строками с генерацией матриц, то получим как раз две одинаковые матрицы. Поэтому в данном задании `set.seed` нужно выполнить один раз перед двумя последующими генерациями. Шаблон кода будет выглядеть так

```{r set-seed-callout-1, echo=TRUE}
set.seed(420)
sim1 <- ...
sim2 <- ...
```

Автопроверка настроена на результаты, получаемы при значении зерна датчика случайный чисел `set.seed(420)`.

:::

:::

```{r 1}
set.seed(420)
sim1 <- matrix(rnorm(50*70, mean = 20.5, sd = 3.48), ncol = 50)
sim2 <- matrix(rnorm(50*70, mean = 20.5, sd = 3.48), ncol = 50)
sim1[1]; sim2[1]
```


::: {#hw2-1-autocheck .autocheck}
::: {#hw2-1-ir .input-requirements}
В качестве самопроверки введите значения из первой строки первого солбца первой и второй матриц (иммено в таком порядке). Значения округлите до сотых по математическим правилам и разделите запятой. Проверка игнорирует все пробелы.
:::

<input class="autocheck-input" type="text" id="hw2-1" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('hw2-1')">

::: {#hw2-1-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="hw2-1-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #2 {#hw2-2-title}

<img id="hw2-2-level" class="level"/>

::: {#hw2-2-task .task}

Напишите функцию `mean_sd`, которая будет вычислять среднее (`mean()`) и стандартное отклонение (`sd()`) по всем выборкам (столбцам) одной матрицы.

Функция должна принимать на вход матрицу произвольного размера и возвращать матрицу, в которой первой строкой будут средние по каждому столбцу матрицы, а второй --- стандартные отклонения. Количество столбцов матрицы аутпута (результата работы функции) должно совпадать с количеством столбцов входной матрицы.

:::

```{r 2}
mean_sd <- function(m) {
  result <- matrix(
    c(
      apply(m, 2, mean),
      apply(m, 2, sd)
      ),
    byrow = TRUE,
    ncol = ncol(m)
  )
  return(result)
}
mean_sd(matrix(1:9, ncol = 3))
```

::: {#hw2-2-autocheck .autocheck}
::: {#hw2-2-ir .input-requirements}
Для проверки корректности работы функции выполните её на матрице

$$
\pmatrix{1 & 4 & 7 \\ 2 & 5 & 8 \\ 3 & 6 & 9}
$$
В поле ответа введите сначала строку со средними, разделив их запятыми, затем точку с запятой, а затем строку со стандартными отклонениями, также разделив их запятыми. Проверка проигнорирует все пробелы, поэтому для удобства ввода можете их использовать.

Привет формата ответа:

`1.2, 2.3, 3.4; 0.1, 0.2, 0.3`.
:::

<input class="autocheck-input" type="text" id="hw2-2" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('hw2-2')">

::: {#hw2-2-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="hw2-2-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #3 {#hw2-3-title}

<img id="hw2-3-level" class="level"/>

::: {#hw2-3-task .task}
Примените функцию, написанную в [задании 2](#hw2-2-title), к матрице `sim1`.
:::

```{r 3}
mean_sd(sim1)
round(mean_sd(sim1)[, 1:3], 2)
```

::: {#hw2-3-autocheck .autocheck}
::: {#hw2-3-ir .input-requirements}
Для самопроверки введи в поле ответа первые три средних и первые три стандартных отклонения, округленные до сотых по математическим правилам.
:::

<input class="autocheck-input" type="text" id="hw2-3" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('hw2-3')">

::: {#hw2-3-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="hw2-3-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #4 {#hw2-4-title}

<img id="hw2-4-level" class="level"/>

::: {#hw2-4-task .task}
Выполните t-тест на первых колонках матриц `sim1` и `sim2` и сохраните результат в переменную `ttest_res`.

t-тест выполняется с помощью функции `t.test()`, в которуб необходимо передать в качестве аргументов два вектора. Синтаксис выглядит так:

```{r test-syntax, echo=TRUE}
t.test(vector1, vector2)
```

Понимание статистики, стоящей за данной функцией, для выполнения задания не требуется.

:::

```{r 4}
ttest <- t.test(sim1[, 1], sim2[, 2])
round(ttest$statistic, 2)
```

::: {#hw2-4-autocheck .autocheck}
::: {#hw2-4-ir .input-requirements}
В качестве ответа для самопроверки введите t-значение (`statistics`), полученное при выполнении теста, округленная до сотых по математическим правилам.
:::

<input class="autocheck-input" type="text" id="hw2-4" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('hw2-4')">

::: {#hw2-4-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="hw2-4-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #5 {#hw2-5-title}

<img id="hw2-5-level" class="level"/>

::: {#hw2-5-task .task}
Извлеките из результатов t-теста оценки средних по выборкам (`estimate`), значение статистики (`statistic`) и p-value (`p.value`).
:::

```{r 5}
ttest$estimate
ttest$statistic
ttest$p.value
```

::: {#hw2-5-autocheck .autocheck}
::: {#hw2-5-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="hw2-5" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('hw2-5')">

::: {#hw2-5-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="hw2-5-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #6 {#hw2-6-title}

<img id="hw2-6-level" class="level"/>

::: {#hw2-6-task .task}
Объедините извлеченные значения в именнованый список. Названия элементов сохраните исходными --- `estimate`, `statistic` и `p.value` соответственно.
:::

```{r 6}
list(estimate = ttest$estimate,
     statistic = ttest$statistic,
     p.value = ttest$p.value)
```

::: {#hw2-6-autocheck .autocheck}
::: {#hw2-6-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="hw2-6" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('hw2-6')">

::: {#hw2-6-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="hw2-6-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #7 {#hw2-7-title}

<img id="hw2-7-level" class="level"/>

::: {#hw2-7-task .task}
У нас есть кирпичики для сбора новой функции.

Основываясь на предыдущих заданиях, напишите функцию, которая выполняет серию t-тестов на соответствующих выборках (столбцах матриц). Сохраните функцию в переменную `stat_testing`.

Функция должна:

* принимать на вход две матрицы
* возвращать список, каждый элементов которого является результат одного t-теста
* каждый результат t-теста также является списком и состоит из трех элементов --- `estimate`, `statistic` и `p.value` (как в [задании 6](#hw2-6-title))

Пример синтаксиса функции и результата её работы на матрицах `A` и `B`:

$$
A = \pmatrix{1 & 4 & 7 \\ 2 & 5 & 8 \\ 3 & 6 & 9}, \quad 
B = \pmatrix{10 & 40 & 70 \\ 20 & 50 & 80 \\ 30 & 60 & 90}
$$

:::

```{r 7, eval=TRUE}
stat_testing <- function(m1, m2) {
  results <- list()
  for (i in 1:ncol(m1)) {
    test <- t.test(m1[, i], m2[, i])
    results[[i]] <- list(estimate = test$estimate,
                       statistic = test$statistic,
                       p.value = test$p.value)
  }
  return(results)
}

A <- matrix(1:9, ncol = 3); B <- matrix(1:9 * 10, ncol = 3)
```

```{r 7-example, echo=TRUE, eval=TRUE}
stat_testing(A, B) # A and B both are matrices
```

::: {#hw2-7-autocheck .autocheck}
::: {#hw2-7-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="hw2-7" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('hw2-7')">

::: {#hw2-7-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="hw2-7-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #8 {#hw2-8-title}

<img id="hw2-8-level" class="level"/>

::: {#hw2-8-task .task}

Выполните функцию из [задания 7](#hw2-7-title) на матрицах `sim1` и `sim2`. Результат работы функции сохраните в переменную `stat_testing_res`.

:::

```{r 8}
stat_testing_res <- stat_testing(sim1, sim2)
stat_testing_res[[30]]$estimate[2]
```

::: {#hw2-8-autocheck .autocheck}
::: {#hw2-8-ir .input-requirements}
Для самопроверки в качестве ответа введите среднее значение (`estimate`) по выборке `y` (`mean of y`) из 30-го t-теста, округленное до сотых по математическим правилам.
:::

<input class="autocheck-input" type="text" id="hw2-8" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('hw2-8')">

::: {#hw2-8-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="hw2-8-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #9 {#hw2-9-title}

<img id="hw2-9-level" class="level"/>

::: {#hw2-9-task .task}
Извлеките из списка `stat_testing_res` вектор p-значений (`p.value`).
:::

```{r 9}
unlist(Map(function(x) x$p.value, stat_testing_res))[10] |> round(2)
```

::: {#hw2-9-autocheck .autocheck}
::: {#hw2-9-ir .input-requirements}
Для самопроверки в качестве ответа введите десятое значение получившегося вектора, округленное до сотых по математическим правилам.
:::

<input class="autocheck-input" type="text" id="hw2-9" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('hw2-9')">

::: {#hw2-9-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="hw2-9-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #10 {#hw2-10-title}

<img id="hw2-10-level" class="level"/>

::: {#hw2-10-task .task}
Проверьте, сколько результатов тестов было статистически значимым. Считайте статистически значимым те результаты, где p-значение было меньше 0.05.
:::

```{r 10}
sum(unlist(Map(function(x) x$p.value, stat_testing_res)) < 0.05)
```

::: {#hw2-10-autocheck .autocheck}
::: {#hw2-10-ir .input-requirements}
Для самопроверки в поле ниже введите получившееся значение.
:::

<input class="autocheck-input" type="text" id="hw2-10" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('hw2-10')">

::: {#hw2-10-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="hw2-10-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

## Дополнительные задания {#hw2_add}

### #1 {#hw2-11-title}

<img id="hw2-11-level" class="level"/>

::: {#hw2-11-task .task}
Модифицируйте функцию из [задания 2](#hw2-2-title), чтобы в её аутпуте строки были подписаны соответственно `mean` и `sd`.

Сохраните модифицированную функцию в переменную `mean_sd_1`.
:::

```{r 11}
mean_sd_1 <- function(m) {
  result <- matrix(
    c(
      apply(m, 2, mean),
      apply(m, 2, sd)
      ),
    byrow = TRUE,
    ncol = ncol(m)
  )
  rownames(result) <- c("mean", "sd")
  return(result)
}
mean_sd_1(m)
```

::: {#hw2-11-autocheck .autocheck}
::: {#hw2-11-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="hw2-11" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('hw2-11')">

::: {#hw2-11-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="hw2-11-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #2 {#hw2-12-title}

<img id="hw2-12-level" class="level"/>

::: {#hw2-12-task .task}
Продолжите модификацию функции из [задания 2](#hw2-2-title), чтобы в её аутпуте столбцы унаследовали названия из входной матрицы, если они есть.

Сохраните модифицированную функцию в переменную `mean_sd_2`.
:::

```{r 12}
mean_sd_2 <- function(m) {
  result <- matrix(
    c(
      apply(m, 2, mean),
      apply(m, 2, sd)
      ),
    byrow = TRUE,
    ncol = ncol(m)
  )
  rownames(result) <- c("mean", "sd")
  colnames(result) <- colnames(m)
  return(result)
}
colnames(m) <- paste0("col", 1:3)
mean_sd_2(m)
```

::: {#hw2-12-autocheck .autocheck}
::: {#hw2-12-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="hw2-12" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('hw2-12')">

::: {#hw2-12-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="hw2-12-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #3 {#hw2-13-title}

<img id="hw2-13-level" class="level"/>

::: {#hw2-13-task .task}

Модифицируйте функцию из [задания 7](#hw2-7-title), чтобы:

* она проверяла, совпадает ли количество столбцов во входных матрицах,
    * в случае совпадения выполняла свой основной код
    * в случае несовпадения заканчивала свою работу с ошибкой `Number of columns does not match`
* можно было задать параметр `paired` для t-тестов с дефолтным значением таким же, как у функции `t.test()`

:::

```{r 13}
stat_testing_1 <- function(m1, m2, paired = FALSE) {
  if (ncol(m1) != ncol(m2)) {
    stop("Number of columns does not match")
  }
  
  results <- list()
  for (i in 1:ncol(m1)) {
    test <- t.test(m1[, i], m2[, i], paired = paired)
    results[[i]] <- list(estimate = test$estimate,
                       statistic = test$statistic,
                       p.value = test$p.value)
  }
  return(results)
}

stat_testing_1(
  matrix(1:12, ncol=3),
  matrix(1:12, ncol=4)
)

stat_testing_1(
  matrix(1:12, ncol=3),
  matrix(1:12 * 10, ncol=3), paired = TRUE
)
```

::: {#hw2-13-autocheck .autocheck}
::: {#hw2-13-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="hw2-13" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('hw2-13')">

::: {#hw2-13-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="hw2-13-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #4 {#hw2-14-title}

<img id="hw2-14-level" class="level"/>

::: {#hw2-14-task .task}
Модифицируйте функцию из [предыдущего задания](#hw2-13-title), чтобы можно было использовать для статистических тестов не только функцию `t.test()`, но и другие. Функция должна без ошибок обрабатывать входные параметры внутренних статистических функций. Сохраните модифицированную функцию в переменную `stat_testing_2`.
:::

```{r 14}
stat_testing_2 <- function(m1, m2, fun, ...) {
  if (ncol(m1) != ncol(m2)) {
    stop("Number of columns does not match")
  }
  
  results <- list()
  for (i in 1:ncol(m1)) {
    test <- fun(m1[, i], m2[, i], ...)
    results[[i]] <- list(estimate = test$estimate,
                       statistic = test$statistic,
                       p.value = test$p.value)
  }
  return(results)
}

stat_testing_2(
  matrix(1:12, ncol=3),
  matrix(1:12, ncol=4)
)

stat_testing_2(
  matrix(1:12, ncol=3),
  matrix(1:12 * 10, ncol=3),
  wilcox.test, paired = TRUE
)
```

::: {#hw2-14-autocheck .autocheck}
::: {#hw2-14-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="hw2-14" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('hw2-14')">

::: {#hw2-14-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="hw2-14-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #5 {#hw2-15-title}

<img id="hw2-15-level" class="level"/>

::: {#hw2-15-task .task}
Напишите функцию, которая решает квадратные уравнения.

Квадратное уравнение задается тремя коэффициентами $a$, $b$ и $c$:

$$
ax^2 + bx + c = 0
$$

Функция должна:

* принимать на вход три аргумента --- коэффициенты квадратного уравнения $a$, $b$ и $c$
    * коэффициент $a$ является обязательным, иначе уравнение не является квадратным
        * значение $a$ не может равняться нулю по той же причине --- функция должна в этом случае выдать ошибку `The equation is not quadratic`
    * если какой-либо из коэффициентов $b$ и $c$ не передан в функцию, его значение считается равным нулю
* возвращать именованный вектор решений квадратного уравнения
    * если два решения различны, необходимо вернуть оба с именами `x1` и `x2` в порядке возрастания
    * если два решения совпадают, необходимо вернуть только одно с именем `x`
    * если решений нет, необходимо вернуть пропущенное значение и сообщение `No solutions`
    
Известно, что уравнения вида $x^2 + 1 = 0$ в общем случае корретны, и функция должна уметь их решать.

* По умолчанию функция должна решать уравнение в вещественных числах.
* Если пользователь хочет, чтобы уравнение решалось в комплексных числах, ему необходимо указать аргумент функции `complex = TRUE`.

Сохраните функцию в переменную `quadeqsolve`.

Примеры работы функции представлены ниже.

:::

```{r 15, eval=TRUE}
quadeqsolve <- function(a, b = 0, c = 0,
                        complex = FALSE) {
  if (a == 0) stop("The equation is not quadratic")
  D = b^2 - 4 * a * c
  
  if (D == 0) {
    return(c(x = -b / (2*a)))
  } else if (D < 0) {
    if(complex) {
      D <- as.complex(D)
      x1 <- (-b - sqrt(D)) / (2*a)
      x2 <- (-b + sqrt(D)) / (2*a)
    } else {
      message("No solutions")
      return(NA)
    }
  } else {
    x1 <- (-b - sqrt(D)) / (2*a)
    x2 <- (-b + sqrt(D)) / (2*a)
  }
  return(c(x1 = x1, x2 = x2))
}
```

```{r 15-examples, echo=TRUE, eval=TRUE, error=TRUE, message=TRUE}
quadeqsolve(a = 1, b = -5, c = 4)
quadeqsolve(b = -3, c = 2)
quadeqsolve(a = 0, b = -3, c = 2)
quadeqsolve(a = -4, c = 2)
quadeqsolve(a = 3, c = 2)
quadeqsolve(a = 3, c = 2, complex = TRUE)
```


::: {#hw2-15-autocheck .autocheck}
::: {#hw2-15-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="hw2-15" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('hw2-15')">

::: {#hw2-15-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="hw2-15-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

```{=html}
<!--- CHANGE hw2 TO hw<n> IN THE LINES BELOW--->
<script type="text/javascript" src="./js/hw2.json"></script>
<script type="text/javascript" src="./js/hw.js"></script>
```
