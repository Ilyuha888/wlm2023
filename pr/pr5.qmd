# P5 // Визуализация данных {#pr5 .unnumbered}

```{=html}
<!--
REPLACE ALL pr5 TO pr<n> WITH MATCH CASE
-->
```

```{r opts, echo=FALSE, eval=TRUE, message=FALSE, error=FALSE}
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, message = FALSE, error = FALSE)
```

## Основные задания {#pr5_main}

::: {.callout-note}
### Описание данных

Сегодня мы будем работать с данными о бриллиантах. Это датасет `diamonds`, который входит в пакет `ggplot2`.

```{r data-desc}
ggplot2::diamonds
```

В нем есть следующие переменные:

* `carat` --- вес бриллианта (в каратах)
* `cut` --- качество огранки
* `color` --- цвет бриллианта (от `D` --- худший --- до `J` --- лучший)
* `clarity` --- чистота бриллианта (от `I1` --- худшее --- до `IF` --- лучшее)
* `x`, `y`, `z` --- длина, ширина и высота бриллианта (в миллиметрах)
* `depth` --- глубина бриллианта, рассчитываемая как $\frac{2z}{xy}$
* `table` --- отношение ширины верхней площадки блиррианта к его наибольшей ширине
* `price` --- цена бриллианта (в долларах США)

:::

### #1

<img id="pr5-1-level" class="level"/>

::: {#pr5-1-task .task}

* Подгрузите пакет `tidyverse` к текущей сессии R.
* Проверье доступен ли вам датасет `diamonds` из пакета `ggplot2`. Выведите структуру датасета, посмотрите, какие переменные и какого типа в нём содержатся.
* Отберите 1000 случайных строк из данных и сохраните их в переменную `diam1000`. Используйте `set.seed(123)`.

:::

```{r 1}
library(tidyverse)
# str(diamonds)

set.seed(123)
diamonds %>% 
    slice(sample(1:nrow(diamonds), 1000)) -> diam1000
```

::: {#pr5-1-autocheck .autocheck}
::: {#pr5-1-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-1" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-1')">

::: {#pr5-1-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-1-hints">

<summary>Подсказки</summary>

* Чтобы получить доступ к датасету `diamonds`, достаточно подключть пакет `tidyverse`. Отдельно подгружать `ggplot2` не нужно, так как он подгружается в месте с другими пакетами `tidyverse`.
* Отобрать строки можно с помощью функции `slice()`.
* Сгенерировать 1000 случайных значений поможет функция `sample()`.

</details>
:::

### #2

<img id="pr5-2-level" class="level"/>

::: {#pr5-2-task .task}

Давайте визуализирует связаимосвязь между длиной (`x`) и шириной (`y`) бриллиантов. Возьмем для этого маленький датасет из 100 наблюдений (`diam1000`).

a. Создайте базовый слой для визуализации.

```{r 2a}
diam1000 %>% 
  ggplot()
```

b. Расчертите оси на базовом слое. По оси `x` пойдёт длина бриллианта, а по оси `y` его ширина.

```{r 2b}
diam1000 %>% 
  ggplot(aes(x, y))
```
:::

::: {#pr5-2-autocheck .autocheck}
::: {#pr5-2-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-2" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-2')">

::: {#pr5-2-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-2-hints">

<summary>Подсказки</summary>

* Построение графика начинается с функции `ggplot()`
* Для задания осей используется функция `aes()` внутри функции `ggplot()`

</details>
:::

### #3

<img id="pr5-3-level" class="level"/>

::: {#pr5-3-task .task}
Отлично! Мольберт мы достали. Теперь надо сказать `ggplot`у, как мы будем отображать наши наблюдения.

a. Перейдите на новый слой и задайте отображение наблюдений с помощью точек.

```{r 3a}
diam1000 %>% 
    ggplot(aes(x, y)) +
    geom_point()
```

b. Добавьте ещё один слой с линией тренда.

```{r 3b}
diam1000 %>% 
    ggplot(aes(x, y)) +
    geom_point() +
    geom_smooth()
```

:::

::: {#pr5-3-autocheck .autocheck}
::: {#pr5-3-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-3" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-3')">

::: {#pr5-3-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-3-hints">

<summary>Подсказки</summary>

* Чтобы перейти на новый слой, понадобится оператор `+`
* За то, как будут отображаться наблюдения, отвечают функции `geom_..()`
* Линия тренда --- это сглаживание (smoothing) отображаемой зкономерности.

</details>
:::

### #4

<img id="pr5-4-level" class="level"/>

::: {#pr5-4-task .task}

Сгруппируйте бриллианты по уровню чистоты (`clarity`), отобразив эту переменную с помощью цвета.

```{r 4}
diam1000 %>% 
    ggplot(aes(x, y, color = clarity)) +
    geom_point() +
    geom_smooth()
```

:::

::: {#pr5-4-autocheck .autocheck}
::: {#pr5-4-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-4" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-4')">

::: {#pr5-4-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-4-hints">

<summary>Подсказка</summary>

Функция `aes()` задает в общем случае вообще любые эстетики --- форматирование графика, связанное с данными. Оси --- это лишь частный случай эстетик.

</details>
:::

### #5

<img id="pr5-5-level" class="level"/>

::: {#pr5-5-task .task}
Супер! Мы разобрались с базовыми принципами работы в `ggplot()` --- эстетики, слои, геомы. Теперь нарисует что-то более серьезное. Будем теперь работать с полным датасетом `diamonds`.

В `ggplot2` есть функции, которые позволяют прямо при построении графика агрегировать наши данные. Воспользуемся их возможностями.

a. Визуализируйте зависимость средней цены бриллиантов (`price`) от качества огранки (`cut`).

```{r 5a}
diamonds %>% 
    ggplot(aes(cut, price)) +
    stat_summary(fun = mean, geom = "point")
```

b. Добавьте к средним доверительные интервалы --- так визуализация будет более корректно отображать закономерность.

```{r 5b}
diamonds %>% 
    ggplot(aes(cut, price)) +
    stat_summary(fun.data = mean_cl_boot, geom = "errorbar") +
    stat_summary(fun = mean, geom = "point")
```

:::

::: {#pr5-5-autocheck .autocheck}
::: {#pr5-5-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-5" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-5')">

::: {#pr5-5-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-5-hints">

<summary>Подсказки</summary>

* Чтобы агрегировать данные внутри `ggplot2`, есть функция `stat_summary()`
* Если в результате агрегации получается одно значение, его необходимо передавать в аргумент `fun`. Если несколько, то `fun.data`.
* Среднее рассчитывается классически. Доверительный интервал можно получить через `mean_cl_boot`.
* Иногда функция падает и просит установить пакет `Hmisc`. Он устанавливается как и любой другой пакет через `install.packages()`.

</details>
:::

### #6

<img id="pr5-6-level" class="level"/>

::: {#pr5-6-task .task}

Визуализация какая-то слишком простенькая. Давайте добавим еще переменных.

a. Сгруппируйте бриллианты по цвету (`color`), отобразив эту переменную с помощью цвета на графике.

```{r 6a}
diamonds %>% 
    ggplot(aes(cut, price, color = color)) +
    stat_summary(fun.data = mean_cl_boot, geom = "errorbar") +
    stat_summary(fun = mean, geom = "point")
```

Мда... Получилось какое-то дикое месиво. Давайте немного причешем визуализацию. Например, подправим расположение точек, чтобы они лежали не на одной прямой, а рядом друг с другом --- ведь небольшие отклонения вправо-влево по оси `x` для нас не имеют значения, так как по горизонтальной оси расположена категориальная переменная.

b. Расположите средние и доверительные интервалы рядом друг с другом, не потеряв при этом уже заданные группировки.

```{r 6b}
pd <- position_dodge(0.5)
diamonds %>% 
    ggplot(aes(cut, price, color = color)) +
    stat_summary(fun.data = mean_cl_boot, geom = "errorbar",
                 position = pd) +
    stat_summary(fun = mean, geom = "point",
                 position = pd)
```

Стало гораздо приятнее. Однако вы видим, что горизонтальные линии, обозначающие границы доверительных интервалов, слишком длинные и касаются друг друга. Надо обеспечить их личным пространством.

с. Уменьшите ширину горизонтальный линий на границах доверительных интервалов, чтобы они не касались друг друга.

```{r 6c}
pd <- position_dodge(0.5)
diamonds %>% 
    ggplot(aes(cut, price, color = color)) +
    stat_summary(fun.data = mean_cl_boot, geom = "errorbar",
                 position = pd, width = .4) +
    stat_summary(fun = mean, geom = "point",
                 position = pd)
```


:::

::: {#pr5-6-autocheck .autocheck}
::: {#pr5-6-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-6" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-6')">

::: {#pr5-6-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-6-hints">

<summary>Подсказки</summary>

* За положение элементов относительно друг друга отвечает аргумент `position`.
* Чтобы поставить элементы рядом, пригодится функция `position_dodge()`.
* У каждого геома есть много настроек, которые называются весьма интуитивно. Например, ширину горизонтальный линий errorbar'ов задает аргумент `width`.

</details>
:::

### #7

<img id="pr5-7-level" class="level"/>

::: {#pr5-7-task .task}
Супер! Мы критически близки к успеху! Осталось поработать над оформлением графика.

a. Измените тему визуализации на черно-белую, чтобы картинка стала более контрастной.

```{r 7a}
diamonds %>%
  ggplot(aes(cut, price, color = color)) +
  stat_summary(
    fun.data = mean_cl_boot,
    geom = "errorbar",
    position = pd,
    width = .4
  ) +
  stat_summary(fun = mean,
               geom = "point",
               position = pd) +
  theme_bw()
```

b. У нас на графике есть легенда, которая занимает прилично так места справа. Сместите её вниз, чтобы пространство графика использовалось более оптимально.

```{r 7b}
diamonds %>%
  ggplot(aes(cut, price, color = color)) +
  stat_summary(
    fun.data = mean_cl_boot,
    geom = "errorbar",
    position = pd,
    width = .4
  ) +
  stat_summary(fun = mean,
               geom = "point",
               position = pd) +
  theme_bw() +
  theme(legend.position = "bottom")
```

:::

::: {#pr5-7-autocheck .autocheck}
::: {#pr5-7-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-7" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-7')">

::: {#pr5-7-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-7-hints">

<summary>Подсказки</summary>

* Сменить тему всего графика можно используя предустановленные темы `ggplot2`, которые задаются через ноывй слой. Есть много тем, однако наиболее важные для нас и часто используемые это `theme_bw()` и `theme_minimal()`.
* Тему можно кастомизировать практически как угодно. Для этого есть масса аргументов функции `theme()`. Так, позицию легенды можно задать через аргумент `legend.position`.

</details>
:::

### #8

<img id="pr5-8-level" class="level"/>

::: {#pr5-8-task .task}
Поработаем над цветовой палитрой. Она неплоха, но некоторые цвета можно спутать, а желтый на белом фоне выглядит крайне неконтрастно.

Задайте собственную цветовую палитру для графика.

В примере ниже использован пакет `colorspace`, в котором есть уже предустановленные цветовые палитры.

:::

```{r 8}
diamonds %>%
  ggplot(aes(cut, price, color = color)) +
  stat_summary(
    fun.data = mean_cl_boot,
    geom = "errorbar",
    position = pd,
    width = .4
  ) +
  stat_summary(fun = mean,
               geom = "point",
               position = pd) +
  theme_bw() +
  theme(legend.position = "bottom") +
  scale_color_manual(values = colorspace::rainbow_hcl(diamonds$color %>%
                                                        unique() %>% length()))
```

::: {#pr5-8-autocheck .autocheck}
::: {#pr5-8-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-8" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-8')">

::: {#pr5-8-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-8-hints">

<summary>Подсказки</summary>

* Кастомизировать экстетики можно с помощью фукнций `scale_.._..()`.

</details>
:::

### #9

<img id="pr5-9-level" class="level"/>

::: {#pr5-9-task .task}

Почти готово! Осталось только подписать оси так, чтобы было понятно, что это такое.

Задайте русские названия осей и легенды, а также добавьте заголовок, подзаголовок и подпись на график.

```{r 9}
diamonds %>%
  ggplot(aes(cut, price, color = color)) +
  stat_summary(
    fun.data = mean_cl_boot,
    geom = "errorbar",
    position = pd,
    width = .4
  ) +
  stat_summary(fun = mean,
               geom = "point",
               position = pd) +
  theme_bw() +
  theme(legend.position = "bottom") +
  scale_color_manual(values = colorspace::rainbow_hcl(diamonds$color %>%
                                                        unique() %>%
                                                        length())) +
  labs(
    x = "Качество огранки",
    y = "Цена",
    color = "Цвет",
    title = "Зависимость цены бриллианта от его характеристик",
    subtitle = "Качество огранки и цвет",
    caption = "отображен 95% доверительный интервал"
  )
```

:::

::: {#pr5-9-autocheck .autocheck}
::: {#pr5-9-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-9" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-9')">

::: {#pr5-9-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-9-hints">

<summary>Подсказки</summary>

Чтобы задать различные подписи для графика, пригодится функция `labs()` (от labels).

</details>
:::

### #10

<img id="pr5-10-level" class="level"/>

::: {#pr5-10-task .task}
Ну, вот мы и построили публикабельную визуализацию. Чтобы её можно было отправить куда-либо --- в журнал, на постер, в презентацию --- её необходимо экспортировать.

Экспортируйте построенный график в формате JPEG, размером 20×20 см в таком разрешении, чтобы он качественно смотрелся в печатном виде.
:::

```{r 10, eval=FALSE}
ggsave('graph1.png', width = 20, height = 20, units = 'cm', dpi = 600)
```

::: {#pr5-10-autocheck .autocheck}
::: {#pr5-10-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-10" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-10')">

::: {#pr5-10-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-10-hints">

<summary>Подсказки</summary>

* Сохранить построенную визуализацию поможет функция `ggsave()`.
* В ней можно задать все необходимые параметры --- размер, разрешение, формат файла.
* Подходящим для печати разрешением считается 600 dpi (dots per inch, точки на дюйм).

</details>
:::

### #11

<img id="pr5-11-level" class="level"/>

::: {#pr5-11-task .task}

Мы задали тему графика внутри кода его построения. В таком случае, когда мы начнем строить другой график, будет импользована дефолтная серая тема.

Установите черно-белую тему на всю сессию работы R.

:::

```{r 11}
theme_set(theme_bw())
```

::: {#pr5-11-autocheck .autocheck}
::: {#pr5-11-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-11" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-11')">

::: {#pr5-11-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-11-hints">

<summary>Подсказки</summary>

Есть крайне полезная функция `theme_set()`, которая позволяет установить какую-либо тему для всей текущей сессии R --- тогда нам не придется задавать тему для каждого графика отдельно.

</details>

:::

### #12

<img class="level"/>

::: {#pr5-12-task .task}
Текст задания.
:::

::: {#pr5-12-autocheck .autocheck}
::: {#pr5-12-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-12" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-12')">

::: {#pr5-12-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-12-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #13

<img id="pr5-13-level" class="level"/>

::: task
Текст задания.
:::

::: {#pr5-13-autocheck .autocheck}
::: {#pr5-13-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-13" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-13')">

::: {#pr5-13-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-13-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #14

<img id="pr5-14-level" class="level"/>

::: {#pr5-14-task .task}
Текст задания.
:::

::: {#pr5-14-autocheck .autocheck}
::: {#pr5-14-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-14" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-14')">

::: {#pr5-14-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-14-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #15

<img id="pr5-15-level" class="level"/>

::: {#pr5-15-task .task}
Текст задания.
:::

::: {#pr5-15-autocheck .autocheck}
::: {#pr5-15-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-15" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-15')">

::: {#pr5-15-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-15-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #16

<img id="pr5-16-level" class="level"/>

::: {#pr5-16-task .task}
Текст задания.
:::

::: {#pr5-16-autocheck .autocheck}
::: {#pr5-16-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-16" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-16')">

::: {#pr5-16-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-16-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #17

<img id="pr5-17-level" class="level"/>

::: {#pr5-17-task .task}
Текст задания.
:::

::: {#pr5-17-autocheck .autocheck}
::: {#pr5-17-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-17" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-17')">

::: {#pr5-17-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-17-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #18

<img id="pr5-18-level" class="level"/>

::: {#pr5-18-task .task}
Текст задания.
:::

::: {#pr5-18-autocheck .autocheck}
::: {#pr5-18-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-18" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-18')">

::: {#pr5-18-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-18-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #19

<img id="pr5-19-level" class="level"/>

::: {#pr5-19-task .task}
Текст задания.
:::

::: {#pr5-19-autocheck .autocheck}
::: {#pr5-19-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-19" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-19')">

::: {#pr5-19-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-19-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #20

<img id="pr5-20-level" class="level"/>

::: {#pr5-20-task .task}
Текст задания.
:::

::: {#pr5-20-autocheck .autocheck}
::: {#pr5-20-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-20" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-20')">

::: {#pr5-20-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-20-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

## Дополнительные задания {#pr5_add}

### #1

<img id="pr5-21-level" class="level"/>

::: {#pr5-21-task .task}
Текст задания.
:::

::: {#pr5-21-autocheck .autocheck}
::: {#pr5-21-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-21" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-21')">

::: {#pr5-21-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-21-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #2

<img id="pr5-22-level" class="level"/>

::: {#pr5-22-task .task}
Текст задания.
:::

::: {#pr5-22-autocheck .autocheck}
::: {#pr5-22-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-22" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-22')">

::: {#pr5-22-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-22-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #3

<img id="pr5-23-level" class="level"/>

::: {#pr5-23-task .task}
Текст задания.
:::

::: {#pr5-23-autocheck .autocheck}
::: {#pr5-23-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-23" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-23')">

::: {#pr5-23-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-23-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #4

<img id="pr5-24-level" class="level"/>

::: {#pr5-24-task .task}
Текст задания.
:::

::: {#pr5-24-autocheck .autocheck}
::: {#pr5-24-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-24" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-24')">

::: {#pr5-24-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-24-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #5

<img id="pr5-25-level" class="level"/>

::: {#pr5-25-task .task}
Текст задания.
:::

::: {#pr5-25-autocheck .autocheck}
::: {#pr5-25-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-25" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-25')">

::: {#pr5-25-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-25-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #6

<img id="pr5-26-level" class="level"/>

::: {#pr5-26-task .task}
Текст задания.
:::

::: {#pr5-26-autocheck .autocheck}
::: {#pr5-26-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-26" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-26')">

::: {#pr5-26-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-26-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #7

<img id="pr5-27-level" class="level"/>

::: {#pr5-27-task .task}
Текст задания.
:::

::: {#pr5-27-autocheck .autocheck}
::: {#pr5-27-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-27" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-27')">

::: {#pr5-27-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-27-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #8

<img id="pr5-28-level" class="level"/>

::: {#pr5-28-task .task}
Текст задания.
:::

::: {#pr5-28-autocheck .autocheck}
::: {#pr5-28-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-28" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-28')">

::: {#pr5-28-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-28-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #9

<img id="pr5-29-level" class="level"/>

::: {#pr5-29-task .task}
Текст задания.
:::

::: {#pr5-29-autocheck .autocheck}
::: {#pr5-29-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-29" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-29')">

::: {#pr5-29-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-29-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

### #10

<img id="pr5-30-level" class="level"/>

::: {#pr5-30-task .task}
Текст задания.
:::

::: {#pr5-30-autocheck .autocheck}
::: {#pr5-30-ir .input-requirements}
Описание формата инпута.
:::

<input class="autocheck-input" type="text" id="pr5-30" placeholder="Введите ответ…">

<input class="autocheck-button" type="button" value="Проверить" onclick="check('pr5-30')">

::: {#pr5-30-fb .autocheck-feedback}
:::
:::

::: hints-wrapper
<details class="hints" id="pr5-30-hints">

<summary>Подсказки</summary>

<details class="hint">

<summary>Как делать задание?</summary>

</details>

<details class="hint">

<summary>Что надо сделать?</summary>

</details>

<details class="hint">

<summary>Ответ неверный</summary>

</details>

</details>
:::

```{=html}
<!--- CHANGE pr5 TO pr<n> IN THE LINES BELOW--->
<script type="text/javascript" src="./js/pr5.json"></script>
<script type="text/javascript" src="./js/pr.js"></script>
```
