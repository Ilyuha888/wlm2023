--- 
title: "Analytics // WLM 2023"
author: "A. Angelgardt"
format: 
  dashboard:
    scrolling: false
    logo: pics/logo.png
---

::: {hidden=true}

## Chunk opts
```{r opts, echo=FALSE, eval=TRUE, message=FALSE}
knitr::opts_chunk$set(echo=FALSE, 
                      message=FALSE, 
                      eval=TRUE,
                      warning=FALSE)
```


## Install pkgs
```{r install-pkgs, eval=FALSE}
# install.packages(c("rystats", "googlesheets4"))
# if (!("remotes" %in% installed.packages())) {
#   install.packages("remotes")
# }
# remotes::install_github("datatrail-jhu/rgoogleclassroom")
```


## Libraries
```{r pkgs}
library(rytstat)
library(googlesheets4)
library(rgoogleclassroom)
library(tidyverse)
theme_set(theme_bw())
theme_update(legend.position = "bottom")
library(plotly)
```

```{r auth}
## youtube
ryt_auth('course.wlm@gmail.com')
# ryt_deauth()
# ryt_has_token()
# ryt_user()

## gs4 auth
gs4_auth("a.n.angelgardt@gmail.com")

## classroom
load("/home/nglgrdt/tokens/classroom_token.Rdata")
auth_from_secret(access_token = token$credentials$access_token,
                 refresh_token = token$credentials$refresh_token)
```


## Load data
```{r load-data, cache=FALSE}
source("get_spec_data.R")
source("get_calendar_data.R")
source("get_journal_data.R")
source("get_yt_data.R")
source("get_classroom_data.R")
aesth <- yaml::read_yaml("aesthetics.yml")
```

:::





# L // Лекции {#lec}


## Row {height=50%}

```{r lectures-graph-by-day}
calendar_activities %>%
  filter(str_detect(code, "^P")) %>%
  ggplot() +
  geom_line(data = lec,
            aes(day, views, color = code)) +
  geom_vline(aes(xintercept = as.numeric(date)),
             linetype = "dashed",
             color = "gray70") +
  geom_text(aes(x = date,
                y = 0,
                label = code)) +
  labs(
    x = "Дата",
    y = "Количество просмотров",
    color = "Лекция",
    title = "Динамика просмотров лекций"
  ) +
  scale_x_date(date_breaks = "week",
               date_minor_breaks = "day") +
  theme(legend.position = "bottom",
        axis.text.x = element_text(angle = 90))
```


## Row {height=50%}

```{r lectures-graph-cumsum}
calendar_activities %>%
  filter(str_detect(code, "^P")) %>%
  ggplot() +
  geom_line(
    data = lec %>%
      group_by(video) %>%
      mutate(cum_views = cumsum(views)),
    aes(day, cum_views, color = code)
  ) +
  geom_vline(aes(xintercept = as.numeric(date)),
             linetype = "dashed",
             color = "gray70") +
  geom_text(aes(x = date,
                y = 0,
                label = code)) +
  labs(
    x = "Дата",
    y = "Количество просмотров",
    color = "Лекция",
    title = "Кумулятивная сумма просмотров лекций"
  ) +
  scale_x_date(date_breaks = "week",
               date_minor_breaks = "day") +
  theme(legend.position = "bottom",
        axis.text.x = element_text(angle = 90))
```





# P // Практики {#pr}


## Row

```{r pr-graph-presence}
pr %>%
  ggplot(aes(practice, percentage, color = half, group = half)) +
  geom_line() +
  geom_point() +
  scale_y_continuous(limits = c(0, 1)) +
  scale_color_discrete(labels = c(`1` = "первая", `2` = "вторая")) +
  labs(
    x = "Практика",
    y = "Доля присутствовавших",
    color = "Часть практики",
    title = "Динамика посещения практик"
  )
```


## Row

```{r practice-graph-by-day}
calendar_assessment %>%
  filter(str_detect(code, "^HW")) %>%
  ggplot() +
  geom_line(data = pr_videos,
            aes(day, views, color = code)) +
  geom_vline(aes(xintercept = as.numeric(date),
                 linetype = deadline),
             color = "gray70") +
  geom_text(aes(x = date,
                y = 0,
                label = code)) +
  labs(
    x = "Дата",
    y = "Количество просмотров",
    color = "Лекция",
    linetype = "Дедлайн",
    title = "Динамика просмотров записей практик"
  ) +
  scale_x_date(date_breaks = "week",
               date_minor_breaks = "day") +
  scale_linetype_manual(
    values = c(hard = "dashed", soft = "dotted"),
    labels = c(hard = "жёсткий", soft = "мягкий")
  ) +
  theme(axis.text.x = element_text(angle = 90))
```


## Row

```{r pr-graph-cumsum}
calendar_assessment %>%
  filter(str_detect(code, "^HW")) %>%
  ggplot() +
  geom_line(
    data = pr_videos %>%
      group_by(video) %>%
      mutate(cum_views = cumsum(views)),
    aes(day, cum_views, color = code)
  ) +
  geom_vline(aes(xintercept = as.numeric(date),
                 linetype = deadline),
             color = "gray70") +
  geom_text(aes(x = date,
                y = 0,
                label = code)) +
  labs(
    x = "Дата",
    y = "Количество просмотров",
    color = "Лекция",
    title = "Кумулятивная сумма просмотров записей практик"
  ) +
  scale_x_date(date_breaks = "week",
               date_minor_breaks = "day") +
  scale_linetype_manual(
    values = c(hard = "dashed", soft = "dotted"),
    labels = c(hard = "жёсткий", soft = "мягкий")
  ) +
  theme(axis.text.x = element_text(angle = 90))
```





# Q // Квизы {#q}





# HW // Домашки {#hw}


## Row

```{r hws-ns}
hws_ns %>%
  ggplot(aes(hw, n)) +
  geom_col() +
  geom_text(aes(
    y = n - 1,
    label = (n / n_partic * 100) %>% round() %>% paste0("%")
  ),
  color = "white") +
  labs(
    x = "Домашка",
    y = "Количество не сдавших",
    title = "Динамика сдачи домашек",
    caption = "лейблы отображают процент не сдавших"
  )
```

```{r hws-mean-scores}
hws_scores %>%
  group_by(hw) %>%
  summarise(mean = mean(score) %>% round(2),
            sd = sd(score) %>% round(2)) %>%
  pivot_longer(-hw,
               names_to = "stat") %>%
  ggplot(aes(hw, value, color = stat, group = stat)) +
  geom_line() +
  geom_point(shape = 21, size = 2) +
  scale_color_discrete(labels = c(mean = "Среднее",
                                  sd = "Стандартное отклонение")) +
  labs(
    x = "Домашка",
    y = "Значение",
    color = "Метрика",
    title = "Средний балл по сданным домашкам"
  )
```


## Row {.tabset}

```{r hw1-tab}
#| title: HW1

hw_tasks %>%
  filter(hw == "HW1") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```

```{r hw2-tab}
#| title: HW2

hw_tasks %>%
  filter(hw == "HW2") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```

```{r hw3-tab}
#| title: HW3

hw_tasks %>%
  filter(hw == "HW3") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```

```{r hw4-tab}
#| title: HW4

hw_tasks %>%
  filter(hw == "HW2") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```

```{r hw5-tab}
#| title: HW5

hw_tasks %>%
  filter(hw == "HW5") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```

```{r hw6-tab}
#| title: HW6

hw_tasks %>%
  filter(hw == "HW6") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```

```{r hw7-tab}
#| title: HW7

hw_tasks %>%
  filter(hw == "HW7") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```

```{r hw8-tab}
#| title: HW8

hw_tasks %>%
  filter(hw == "HW8") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```

```{r hw9-tab}
#| title: HW9

hw_tasks %>%
  filter(hw == "HW9") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```

```{r hw10-tab}
#| title: HW10

hw_tasks %>%
  filter(hw == "HW10") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```

```{r hw11-tab}
#| title: HW11

hw_tasks %>%
  filter(hw == "HW11") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```

```{r hw12-tab}
#| title: HW12

hw_tasks %>%
  filter(hw == "HW12") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```

```{r hw13-tab}
#| title: HW13

hw_tasks %>%
  filter(hw == "HW13") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```

```{r hw14-tab}
#| title: HW14

hw_tasks %>%
  filter(hw == "HW14") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```

```{r hw15-tab}
#| title: HW15

hw_tasks %>%
  filter(hw == "HW15") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```

```{r hw16-tab}
#| title: HW16

hw_tasks %>%
  filter(hw == "HW16") %>%
  drop_na() %>%
  mutate(score = as.numeric(score)) %>% 
  left_join(hws_scores %>%
              rename(total_score = score),
            join_by(ID, hw)) %>%
  group_by(task, level) %>%
  summarise(
    ns_prop = mean(is.na(score)) %>% round(2),
    difficulty = (mean(score, na.rm = TRUE) / 2) %>% round(2),
    discrimination = cor(score, total_score) %>% round(2)
  ) %>%
  replace_na(list(discrimination = 0)) %>%
  pivot_longer(-c(task, level), names_to = "metrics") %>%
  ggplot(aes(task,
             value,
             shape = metrics,
             fill = level,
             color = level)) +
  geom_point(size = 2, alpha = .7) +
  geom_hline(
    yintercept = c(.1, .9),
    linetype = "dashed",
    color = "gray50"
  ) +
  geom_hline(
    yintercept = c(.25),
    linetype = "dotted",
    color = "gray50"
  ) +
  # scale_x_continuous(breaks = 1:15) +
  scale_fill_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_color_manual(
    values = c(
      easy = aesth$levels$easy,
      medium = aesth$levels$medium,
      hard = aesth$levels$hard,
      extreme = aesth$levels$extreme
    )
  ) +
  scale_shape_manual(
    values = c(
      difficulty = aesth$metrics$difficilty,
      ns_prop = aesth$metrics$ns_prop,
      discrimination = aesth$metrics$discrimination
    )
  ) +
  labs(
    x = "Задание",
    y = "Значение",
    shape = "Метрика",
    fill = "Уровень сложности",
    color = "Уровень сложности"
  )
```


## Row {height=100%}

```{r hws-scores}
hws_scores %>%
  ggplot(aes(score)) +
  geom_histogram(binwidth = 1) +
  facet_wrap(~ hw) +
  labs(x = "Балл",
       y = "Количество",
       title = "Распределение баллов домашек")
```



# С // Консультации {#c}


## Row

```{r c-graph-presence}
cons %>%
  ggplot(aes(consultation, percentage, group = 1)) +
  geom_line() +
  geom_point() +
  scale_y_continuous(limits = c(0, 1)) +
  labs(x = "Консультация",
       y = "Доля присутствовавших",
       title = "Динамика посещения консультаций")
```


## Row

```{r c-graph-by-day}
calendar_assessment %>%
  filter(str_detect(code, "^HW")) %>%
  ggplot() +
  geom_line(data = cons_videos,
            aes(day, views, color = code)) +
  geom_vline(aes(xintercept = as.numeric(date),
                 linetype = deadline),
             color = "gray70") +
  geom_text(aes(x = date,
                y = 0,
                label = code)) +
  labs(
    x = "Дата",
    y = "Количество просмотров",
    color = "Лекция",
    linetype = "Дедлайн",
    title = "Динамика просмотров записей консультаций"
  ) +
  scale_x_date(date_breaks = "week",
               date_minor_breaks = "day") +
  scale_linetype_manual(
    values = c(hard = "dashed", soft = "dotted"),
    labels = c(hard = "жёсткий", soft = "мягкий")
  ) +
  theme(axis.text.x = element_text(angle = 90))
```


## Row

```{r c-graph-cumsum}
calendar_assessment %>%
  filter(str_detect(code, "^HW")) %>%
  ggplot() +
  geom_line(
    data = cons_videos %>%
      group_by(video) %>%
      mutate(cum_views = cumsum(views)),
    aes(day, cum_views, color = code)
  ) +
  geom_vline(aes(xintercept = as.numeric(date),
                 linetype = deadline),
             color = "gray70") +
  geom_text(aes(x = date,
                y = 0,
                label = code)) +
  labs(
    x = "Дата",
    y = "Количество просмотров",
    color = "Лекция",
    title = "Кумулятивная сумма просмотров записей консультаций"
  ) +
  scale_x_date(date_breaks = "week",
               date_minor_breaks = "day") +
  scale_linetype_manual(
    values = c(hard = "dashed", soft = "dotted"),
    labels = c(hard = "жёсткий", soft = "мягкий")
  ) +
  theme(axis.text.x = element_text(angle = 90))
```





# A // Разборы {#a}


## Row

```{r a-graph-by-day}
calendar_assessment %>%
  filter(str_detect(code, "^HW")) %>%
  ggplot() +
  geom_line(data = a_videos,
            aes(day, views, color = code)) +
  geom_vline(aes(xintercept = as.numeric(date),
                 linetype = deadline),
             color = "gray70") +
  geom_text(aes(x = date,
                y = 0,
                label = code)) +
  labs(
    x = "Дата",
    y = "Количество просмотров",
    color = "Лекция",
    linetype = "Дедлайн",
    title = "Динамика просмотров разборов"
  ) +
  scale_x_date(date_breaks = "week",
               date_minor_breaks = "day") +
  scale_linetype_manual(
    values = c(hard = "dashed", soft = "dotted"),
    labels = c(hard = "жёсткий", soft = "мягкий")
  ) +
  theme(axis.text.x = element_text(angle = 90))
```


## Row

```{r a-graph-cumsum}
calendar_assessment %>%
  filter(str_detect(code, "^HW")) %>%
  ggplot() +
  geom_line(
    data = a_videos %>%
      group_by(video) %>%
      mutate(cum_views = cumsum(views)),
    aes(day, cum_views, color = code)
  ) +
  geom_vline(aes(xintercept = as.numeric(date),
                 linetype = deadline),
             color = "gray70") +
  geom_text(aes(x = date,
                y = 0,
                label = code)) +
  labs(
    x = "Дата",
    y = "Количество просмотров",
    color = "Лекция",
    title = "Кумулятивная сумма просмотров разборов"
  ) +
  scale_x_date(date_breaks = "week",
               date_minor_breaks = "day") +
  scale_linetype_manual(
    values = c(hard = "dashed", soft = "dotted"),
    labels = c(hard = "жёсткий", soft = "мягкий")
  ) +
  theme(axis.text.x = element_text(angle = 90))
```
