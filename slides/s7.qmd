---
title: "L7 // Описательные статистики. Корреляционный анализ"
author: "Антон Ангельгардт"
format: 
  revealjs:
    logo: pics/logo.png
    footer: "WLM 2023"
    theme: style.scss
    transition: fade
    scrollable: true
    smaller: false
highlight-style: github
---

## Что будет?
```{js favicon-loader}
//  <link rel="icon" type="image/x-icon" href="pics/favicon.png">

var link = document.createElement('link');
link.type = 'image/x-icon';
link.rel = 'icon';
document.head.appendChild(link);
link.href = 'pics/favicon.png';
```


{{< include ../book/_symbols.qmd >}}

```{r opts, echo=FALSE, eval=TRUE, warning=FALSE, message=FALSE}
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, warning = FALSE, message = FALSE)
```

```{r andan-desc-pkgs, echo=FALSE, message=FALSE, warning=FALSE}
library(tidyverse)
theme_set(theme_bw())
library(latex2exp)
```

- Описательная статистика vs статистика вывода
- Центральная тенденция и разброс
- Выбросы
- Коэффициент корреляции
- Его статистическая значимость и доверительный интервал
- Нестандартные коэффициенты корреляции


# L7.1 // Описательные статистики {#andan-descriptives}

## Виды статистики

- **Описательная статистика (descriptive statistics)**
    - обработка статистических данных
    - их наглядное представление
    - их описанием через некоторые характеристики
- **Статистика вывода (inferential statistics)**
    - поиск ответов на содержательные вопросы
    - *тестирование статистических гипотез* + *статистические методы*

## Меры центральной тенденции

|    **Шкала**   |        **Мера центральной тенденции**        |
|:---------------|:---------------------------------------------|
| _Номинальная_  | Мода                                         |
| _Порядковая_   | Медиана                                      |
| _Интервальная_ | Среднее арифметическое                       |
| _Абсолютная_   | Среднее арифметическое, геометрическое и др. |


## Мода

**Мода** [дискретной переменной] --- наиболее часто встречающееся значение данной переменной.

$$
\begin{bmatrix}
1 & 3 & 4 & 6 & 3 & 2 & 3 & 3 & 2 & 4 & 1
\end{bmatrix}
$$

$$
\begin{matrix}
\text{Значение} & 1 & 2 & 3 & 4 & 6 \\
\text{Частота}  & 2 & 2 & 4 & 2 & 1
\end{matrix}
$$

$$
\begin{bmatrix}
\text{DME} & \text{LED} & \text{IST} & \text{AER} & \text{IST} &\text{SVO} & \text{LED} & \text{VKO} & \text{LED} & \text{IST} & \text{IST} & \text{VKO} & \text{AER} & \text{DME}
\end{bmatrix}
$$

$$
\begin{matrix}
\text{Значение} & \text{DME} & \text{LED} & \text{IST} & \text{AER} & \text{SVO} & \text{VKO}\\
\text{Частота}  & 2 & 3 & 4 & 2 & 1 & 2
\end{matrix}
$$


## Мода. Функция вероятности

**Мода** [дискретной переменной] --- это значение переменной, при котором её функция вероятности принимает своё максимальное значение.

$$
\text{mode}(X) = \arg \max(\text{PMF}(X)) = \arg \max_{x_i}(\prob (X = x_i)),
$$

где $X$ --- дискретная случайная величина, $x_i$ --- значение этой случайной величины.

## Мода. Функция вероятности

```{r mode-pmf, echo=FALSE}
tibble(x = 1:10,
       y = c(.01, .03, .07, .1, .1, .15, .2, .1, .09, .15)) |> 
  ggplot(aes(x, y)) +
  annotate(geom = "point", x = 7, y = 0.2, size = 7, shape = 21, color = "darkred", fill = "red", alpha = .5) +
  geom_point() +
  geom_vline(xintercept = 7, color = "darkred", linetype = "dashed") +
  annotate(geom = "text", label = "это максимум функции", 
           x = 8.5, y = 0.2, color = "darkred") +
  annotate(geom = "text", label = "это мода", 
           x = 7, y = 0, color = "darkred") +
  scale_x_continuous(breaks = 1:10) +
  labs(x = "Value", y = "Probability")
```

## Мода для непрерывной переменной

```{r mode-continuous-data, echo=FALSE}
mode_cont_data <- tibble(x = seq(-4, 4, by = .01), y = dnorm(x))
mode_high_freq <- mode_cont_data |> filter(x > -.5 & x < .5)
mode_low_freq <- mode_cont_data |> filter(x > -2.5 & x < -1.5)
```

```{r mode-continuous-freqs, echo=FALSE}
ggplot(mode_cont_data,
       aes(x, y)) +
  geom_line() +
  geom_polygon(data = tibble(y = c(0, 0), x = c(.5, -.5)) |> 
                 bind_rows(mode_high_freq),
               fill = "seagreen", alpha = .5) +
  geom_polygon(data = tibble(y = c(0, 0), x = c(-1.5, -2.5)) |>
                 bind_rows(mode_low_freq),
               fill = "royalblue", alpha = .5) +
  annotate(geom = "text", label = "эти значения встречаются часто",
           x = 0, y = .2, angle = 90, color = "darkgreen") +
  annotate(geom = "text", label = "эти значения\nвстречаются реже",
           x = -2.2, y = .15, angle = 90, color = "darkblue") +
  labs(x = "Value", y = "Density")
```

## Мода. Функция плотности вероятности

**Мода** [непрерывной переменной] --- это значение переменной, при котором её функция плотности вероятности достигает локального[^local-max-mode] максимума.

$$
\text{mode}(X) = \arg \max(\text{PDF}(X)) = \arg \max_{x \in S}f(x),
$$

гдe $X$ --- непрерывная случайная величина, $x$ --- значение этой случайной величины, $S$ --- имеющаяся выборка значений переменной.

## Мода. Функция плотности вероятности

```{r mode-continuous-mode, echo=FALSE}
ggplot(mode_cont_data,
       aes(x, y)) +
  geom_line() +
  geom_polygon(data = tibble(y = c(0, 0), x = c(.5, -.5)) |> 
                 bind_rows(mode_high_freq),
               fill = "seagreen", alpha = .5) +
  geom_vline(xintercept = 0, linetype = "dashed", color = "darkgreen") +
  geom_point(aes(x = 0, y = .4), color = "darkgreen", size = 2) +
  annotate(geom = "text", label = "мода тут",
           x = 0, y = 0, color = "darkgreen") +
  annotate(geom = "text", label = "локальный максимум тут",
           x = 1.5, y = 0.4, color = "darkgreen") +
  labs(x = "Value", y = "Density")
```


## Унимодальное распределение. Нормальное распределение

```{r mode-norm-mode, echo=FALSE}
tibble(x = seq(0, 4, by = .01),
       y = dnorm(x, mean = 2, sd = 0.5)) |> 
  ggplot(aes(x, y)) +
  geom_line() +
  geom_vline(xintercept = 2, linetype = "dashed") +
  labs(x = "Value", y = "Density")
```

## Унимодальное распределение. Биномиальное распределение

```{r mode-binom-mode, echo=FALSE}
tibble(x = seq(0, 20, by = 1),
       y = dbinom(x, prob = 0.3, size = 50)) |> 
  ggplot(aes(x, y)) +
  geom_point() +
  geom_vline(xintercept = 15, linetype = "dashed") +
  labs(x = "Value", y = "Probability")
```

## Унимодальное распределение. Распределение Пуассона

```{r mode-poiss-mode, echo=FALSE}
tibble(x = seq(0, 20, by = 1),
       y = dpois(x, lambda = 5.5)) |> 
  ggplot(aes(x, y)) +
  geom_point() +
  geom_vline(xintercept = 5, linetype = "dashed") +
  labs(x = "Value", y = "Probability")
```

## Унимодальность. Эмпирические распределения

```{r mode-norm-sample, echo=FALSE}
set.seed(314)
tibble(x = rnorm(100, mean = 8, sd = 4)) |> 
  ggplot(aes(x = x)) +
  geom_histogram(aes(y = after_stat(density)), 
                 fill = "gray90", binwidth = .5) +
  geom_density() +
  geom_vline(xintercept = 8.5, linetype = "dashed") +
  labs(x = "Value", y = "Density")
```

```{r mode-norm, echo=FALSE}
set.seed(314)
tibble(x = rlnorm(n = 30, meanlog = 1.1, sdlog = 1.39)) |> 
  ggplot(aes(x = x)) +
  geom_histogram(aes(y = after_stat(density)), 
                 fill = "gray90", binwidth = .5) +
  geom_density() +
  geom_vline(xintercept = 1.35, linetype = "dashed") +
  labs(x = "Value", y = "Density")
```

## Бимодальное и полимодальное распределения

```{r mode-bimodal, echo=FALSE}
set.seed(65)
tibble(x = c(rnorm(80, 1.5, 0.4), rnorm(40, 4, 0.5))) |> 
  ggplot(aes(x)) +
  geom_histogram(aes(y = after_stat(density)), 
                 fill = "gray90", binwidth = .4) +
  geom_density() +
  geom_vline(xintercept = 1.5, linetype = "dashed") +
  geom_vline(xintercept = 4.1, linetype = "dashed") +
  labs(x = "Value", y = "Density")
```

```{r mode-polymodal, echo=FALSE}
set.seed(65)
tibble(x = c(rnorm(80, 1.5, 0.3), rnorm(40, 3.4, 0.5), rbeta(50, 2, 4))) |> 
  ggplot(aes(x)) +
  geom_histogram(aes(y = after_stat(density)), 
                 fill = "gray90", binwidth = .4) +
  geom_density() +
  geom_vline(xintercept = 0.4, linetype = "dashed") +
  geom_vline(xintercept = 1.45, linetype = "dashed") +
  geom_vline(xintercept = 3.5, linetype = "dashed") +
  labs(x = "Value", y = "Density")
```

## Что это значит и что с этим делать?

```{r mode-bimodal-struct, echo=FALSE}
set.seed(65)
tibble(x = c(rnorm(80, 1.5, 0.4), rnorm(40, 4, 0.5)),
       d = c(rep("A", times = 80), rep("B", times = 40))) -> bimodal_struct_data
gridExtra::grid.arrange(
  bimodal_struct_data |> 
    ggplot(aes(x)) +
    geom_histogram(fill = "gray90", binwidth = .4) +
    geom_density(aes(y = after_stat(count))) +
    geom_vline(xintercept = 1.5, linetype = "dashed") +
    geom_vline(xintercept = 4.1, linetype = "dashed") +
    labs(x = "Value", y = "Count"),
  
  bimodal_struct_data |> 
    ggplot(aes(x)) +
    geom_histogram(aes(fill = d), 
                   alpha = .3, binwidth = .4) +
    geom_density(aes(y = after_stat(count), color = d)) +
    geom_vline(xintercept = 1.5, linetype = "dashed") +
    geom_vline(xintercept = 4.1, linetype = "dashed") +
    guides(color = "none", fill = "none") +
    labs(x = "Value", y = "Count")
)
```


## Медиана

$$
\begin{bmatrix}
1 & 3 & 4 & 6 & 3 & 2 & 3 & 3 & 2 & 4 & 1
\end{bmatrix}
$$

$$
\begin{bmatrix}
1  & 1 & 2 & 2 & 3 & 3 & 3 & 3 & 4 & 4 & 6
\end{bmatrix}
$$

$$
\begin{bmatrix}
1 & 1 & 2 & 2 & 3 & \mathbf{3} & 3 & 3 & 4 & 4 & 6
\end{bmatrix}
$$

## Медиана

**Медиана (median)** --- это значение, которое располагается на середине отсортированного ряда значений переменной. 


$$
\begin{bmatrix}
14 & 10 & 9 & 16 & 30 & 3 & 25 & 8 & 18 & 7
\end{bmatrix}
$$

$$
\begin{bmatrix}
3 & 7 & 8 & 9 & 10 & 14 & 16 & 18 & 25 & 30
\end{bmatrix}
$$

$$
\begin{bmatrix}
3 & 7 & 8 & 9 & 10 & | & 14 & 16 & 18 & 25 & 30
\end{bmatrix}
$$

$$
\text{median} = \frac{10 + 14}{2} = 12
$$

## Медиана. Вычисление

$$
\text{median}(X) = X(a) =
\cases{
X\left(\frac{n+1}{2}\right), & if  2 | n \\
\dfrac{X(\frac{n}{2}) + X(\frac{n}{2} + 1)}{2}, & otherwise
}
$$

где $X$ --- ряд наблюдений случайной величины, $n$ --- число наблюдений, $X(a)$ --- наблюдение с индексом $a$ в отсортированном векторе $X$.


## Медиана и распределение

```{r median-norm, echo=FALSE}
tibble(x = seq(-4, 4, by = .01),
       y = dnorm(x)) -> median_norm_data 
median_norm_data |> filter(x >= 0) -> median_norm_upper
median_norm_data |> filter(x <= 0) -> median_norm_lower
median_norm_data |> 
  ggplot(aes(x, y)) +
  geom_line() +
  geom_polygon(data = tibble(y = c(0, 0), x = c(4, 0)) |> 
                 bind_rows(median_norm_upper),
               fill = "seagreen", alpha = 0.5) +
  geom_polygon(data = tibble(y = c(0, 0), x = c(0, -4)) |> 
                 bind_rows(median_norm_lower),
               fill = "royalblue", alpha = 0.5) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate(geom = "text", label = "эти значения\nбольше медианы \n\n 50%", 
           color = "darkgreen", x = 1, y = 0.05) +
  annotate(geom = "text", label = "эти значения\nменьше медианы \n\n 50%", 
           color = "darkblue", x = -1, y = 0.05) +
  annotate(geom = "text", label = "это медиана", 
           x = -0.01, y = 0)
```

## Медиана. Асимметричное распределение

```{r median-left-skew, echo=FALSE}
set.seed(115)
tibble(x = seq(0.3, 1, by = .001),
       y = dbeta(x, 7, 1.5)) -> median_leftskew_data

median_leftskew_data |> 
  filter(x >= .845) %>%
  bind_rows(
    tibble(y = c(0, 0),
           x = c(max(median_leftskew_data$x), .845)),
    .) -> median_leftskew_data_upper

median_leftskew_data |> 
  filter(x <= .845) %>%
  bind_rows(
    tibble(y = c(0, 0),
           x = c(.845, min(median_leftskew_data$x))),
    .) -> median_leftskew_data_lower

# DescTools::AUC(median_leftskew_data_upper$x,
#                median_leftskew_data_upper$y)

median_leftskew_data |> 
  ggplot(aes(x, y)) +
  geom_line() +
  geom_polygon(data = median_leftskew_data_lower, 
               aes(x = x, y = y), fill = "royalblue", alpha = .5) +
  geom_polygon(data = median_leftskew_data_upper, 
               aes(x = x, y = y), fill = "seagreen", alpha = .5) +
  geom_vline(xintercept = 0.845, linetype = "dashed") +
  annotate(geom = "text", label = "50%", 
           color = "darkgreen", x = .9, y = 1) +
  annotate(geom = "text", label = "50%", 
           color = "darkblue", x = .8, y = 1) +
  labs(x = "Value", y = "Density")
```

## Медиана. Асимметричное распределение

```{r median-right-skew, echo=FALSE}
set.seed(115)
tibble(x = seq(0, 5, by = .001),
       y = dgamma(x, 2, 2)) -> median_rightskew_data

median_rightskew_data |>
  filter(x >= .85) %>%
  bind_rows(
    tibble(y = c(0, 0),
           x = c(max(median_rightskew_data$x), .85)),
    .) -> median_rightskew_data_upper

median_rightskew_data |>
  filter(x <= .85) %>%
  bind_rows(
    tibble(y = c(0, 0),
           x = c(.85, min(median_rightskew_data$x))),
    .) -> median_rightskew_data_lower

# DescTools::AUC(median_rightskew_data_lower$x,
#               median_rightskew_data_lower$y)

median_rightskew_data |> 
  ggplot(aes(x, y)) +
  geom_line() +
  geom_polygon(data = median_rightskew_data_lower, 
               aes(x = x, y = y), fill = "royalblue", alpha = .5) +
  geom_polygon(data = median_rightskew_data_upper, 
               aes(x = x, y = y), fill = "seagreen", alpha = .5) +
  annotate(geom = "text", label = "50%", 
           color = "darkgreen", x = 1.25, y = .2) +
  annotate(geom = "text", label = "50%", 
           color = "darkblue", x = .5, y = .2) +
  geom_vline(xintercept = 0.85, linetype = "dashed") +
  labs(x = "Value", y = "Density")
```

## Медиана. Бимодальное распределение

```{r median-bimodal, echo=FALSE}
set.seed(115)
tibble(x = c(rnorm(80, 1.5, 0.4), rnorm(40, 4, 0.5))) -> median_bimodal_data

median_bimodal_data |> 
  ggplot(aes(x)) +
  geom_density() -> g
ggplot_build(g) -> b
b$data[[1]] -> median_bimodal_data_build

median_bimodal_data$x |> median() -> m
# median_bimodal_data_build$x |> median() -> m

median_bimodal_data_build |> 
  select(y, x) |> 
  filter(x >= m) %>% 
  bind_rows(
    tibble(y = c(0, 0),
           x = c(max(median_bimodal_data_build$x), m)),
    .) -> median_bimodal_data_build_upper

median_bimodal_data_build |>
  select(y, x) |> 
  filter(x <= m) %>%
  bind_rows(
    tibble(y = c(0, 0),
           x = c(m , min(median_bimodal_data_build$x))),
    .) -> median_bimodal_data_build_lower

# DescTools::AUC(x = median_bimodal_data_build_upper$x,
#                y = median_bimodal_data_build_upper$y)
# DescTools::AUC(x = median_bimodal_data_build_lower$x,
#                y = median_bimodal_data_build_lower$y)

median_bimodal_data_build |> 
  ggplot(aes(x, y)) +
  geom_histogram(data = median_bimodal_data,
                 aes(x = x, y = after_stat(density)), 
                 fill = "gray90", binwidth = .4) +
  geom_line() +
  geom_polygon(data = median_bimodal_data_build_lower, 
               aes(x = x, y = y), fill = "royalblue", alpha = .5) +
  geom_polygon(data = median_bimodal_data_build_upper, 
               aes(x = x, y = y), fill = "seagreen", alpha = .5) +
  geom_vline(xintercept = m, linetype = "dashed") +
  annotate(geom = "text", label = "50%", 
           color = "darkgreen", x = 2.25, y = .1) +
  annotate(geom = "text", label = "50%", 
           color = "darkblue", x = 1.25, y = .1) +
  labs(x = "Value", y = "Density")
```



## Арифметическое среднее

$$
\mean_X = \bar X = \dfrac{\sum_{i=1}^{n}x_i}{n},
$$

где $\bar X$ --- среднее арифметическое, $x_i$ --- наблюдение в векторе $X$, $n$ --- количество наблюдений.


## Свойства среднего арифметического

$$
\mean_{X+c} = \mean_X + c
$$

$$
\mean_{X+c} = \frac{\sum_{i=1}^n (x_i + c)}{n} = \frac{\sum_{i=1}^n x_i + nc}{n} = \frac{\sum_{i=1}^n x_i}{n} + c = \mean_X + c
$$

```{r creating_tibble_for_feature_vis_1, include=FALSE}
smpl1 <- tibble(x1 = seq(-3, 3, by = .001),
               y1 = dnorm(x1),
               x2 = x1 + 2,
               y2 = dnorm(x2, mean = 2))
```

```{r mean_feature_1, echo=FALSE}
smpl1 %>% 
  ggplot() +
  geom_line(aes(x1, y1), color = "blue4") +
  geom_line(aes(x2, y2), color = "red4") +
  geom_vline(xintercept = 0, linetype = "dashed", color = "blue4") +
  geom_vline(xintercept = 2, linetype = "dashed", color = "red4") +
  labs(x = "Value", y = "Density")
```


## Свойства среднего арифметического

$$
\mean_{X \times c} = \mean_X \times c
$$

$$
\mean_{X \times c} = \frac{\sum_{i=1}^n (x_i \times c)}{n} = \frac{c \times \sum_{i=1}^n x_i}{n} = \frac{\sum_{i=1}^n x_i}{n} \times c = \mean_X \times c
$$

```{r creating_tibble_for_feature_vis_2, include=FALSE}
smpl2 <- tibble(x1 = seq(-2, 4, by = .001),
               y1 = dnorm(x1, mean = 1),
               x2 = x1 * 3,
               y2 = dnorm(x2, mean = 3, sd = 3))
```

```{r mean_feature_2, echo=FALSE}
smpl2 %>% 
  ggplot() +
  geom_line(aes(x1, y1), color = "blue4") +
  geom_line(aes(x2, y2), color = "red4") +
  geom_vline(xintercept = 1, linetype = "dashed", color = "blue4") +
  geom_vline(xintercept = 3, linetype = "dashed", color = "red4") +
  labs(x = "Value", y = "Density")
```

## Свойства среднего арифметического

$$
\sum_{i=1}^n(x_i - \bar X) = 0
$$

$$
\begin{split}
\sum_{i=1}^n(x_i - \bar X) & = \sum_{i=1}^n x_i - \sum_{i=1}^n \bar X = \sum_{i=1}^n x_i - n \bar X = \\
& = \sum_{i=1}^n x_i - n \times \frac{1}{n} \sum_{i=1}^n x_i = \sum_{i=1}^n x_i - \sum_{i=1}^n x_i = 0
\end{split}
$$

## Отклонение

**Отклонение** --- это разность между средним и конкретным значением переменной.

```{r df_polygons, include=FALSE}
poly_left <- smpl1 %>% 
  select(x1, y1) %>% 
  filter(x1 < 0) %>% 
  bind_rows(tibble(x1 = c(0, -3), y1 = c(0, 0)))
poly_right <- smpl1 %>% 
  select(x1, y1) %>% 
  filter(x1 > 0) %>% 
  bind_rows(tibble(x1 = c(3, 0), y1 = c(0, 0)))
```

```{r zero_deviation_sum, echo=FALSE}
smpl1 %>% 
  ggplot() +
  geom_line(aes(x1, y1)) +
  geom_polygon(data = poly_left, aes(x=x1, y=y1), fill="red4", alpha = .5) +
  geom_polygon(data = poly_right, aes(x=x1, y=y1), fill="green4", alpha = .5) +
  geom_vline(xintercept = 0, linetype = "dashed") +
  annotate(geom="text", x = -1, y = .05, label ="отрицательные\nотклонения") +
  annotate(geom="text", x = 1, y = .05, label ="положительные\nотклонения") +
  labs(x = "Value", y = "Density")
```


## Геометрическое среднее

$$
G_{X} = \sqrt[n]{\prod_{i=1}^n x_i} = \Big(\prod_{i=1}^n x_i\Big)^{\tfrac{1}{n}}
$$

## Квадратичное среднее

**Квадратичное среднее (quadratic mean, root mean square, RMS)** --- это квадратный корень из среднего квадрата наблюдений.

$$
S_X = \sqrt{\frac{\sum_{i=1}^n x_i^2}{n}}
$$


## Гармоническое среднее

$$
H_X = \frac{n \prod_{i=1}^n x_i}{\sum_{i=1}^n (\tfrac{1}{x} \prod_{j=1}^n x_j)} = \frac{n}{\sum_{i=1}^n \tfrac{1}{x_i}}
$$


## Взвешенное среднее

$$
\text{final score } = 1 \cdot \text{test} + 3 \cdot \text{essay} + 6 \cdot \text{exam}
$$

$$
\text{final score } = \frac{1 \cdot \text{test} + 3 \cdot \text{essay} + 6 \cdot \text{exam}}{1 + 3 + 6}
$$

$$
\bar X = \frac{\sum_{i=1}^n w_i x_i}{\sum_{i=1}^n w_i} = \sum_{i=1}^n w_i' x_i,
$$

где $x_i$ --- значения конкретных параметров, $w_i$ --- веса конкретных параметров, $w_i'$ --- нормированные веса параметров.

$$
w_i' = \frac{w_i}{\sum_{i=1}^n w_i}
$$

## Среднее vs медиана vs мода

* *моду невозможно посчитать для непрерывной переменной*
* *медиану нельзя посчитать на номинальной шкале*
* *среднее тоже нельзя посчитать на номинальной шкале*
* *для дискретной переменной значение среднего арифметического может быть не особо применимо*

## Среднее vs медиана vs мода. Симметричное распределение распределения

```{r central_tendency_sampling, include=FALSE}
set.seed(108)
symm <- sample(
  x = seq(1, 10, 0.5),
  size = 600,
  replace = TRUE,
  prob = c(
    .05,
    .05,
    .07,
    .1,
    .1,
    .15,
    .20,
    .30,
    .35,
    .5,
    .35,
    .30,
    .20,
    .15,
    .1,
    .1,
    .07,
    .05,
    .05
  )
)
asymm_right <- sample(
  x = seq(1, 10, 0.5),
  size = 600,
  replace = TRUE,
  prob = c(
    .1,
    .2,
    .25,
    .4,
    .5,
    .5,
    .4,
    .35,
    .3,
    .25,
    .2,
    .25,
    .2,
    .15,
    .1,
    .1,
    .07,
    .05,
    .05
  )
)
asymm_left <- sample(
  x = seq(1, 10, 0.5),
  size = 600,
  replace = TRUE,
  prob = c(
    .03,
    .05,
    .07,
    .1,
    .15,
    .15,
    .2,
    .2,
    .25,
    .25,
    .3,
    .35,
    .5,
    .5,
    .4,
    .4,
    .25,
    .2,
    .2
  )
)
bimodal <- sample(
  x = seq(1, 10, 0.5),
  size = 600,
  replace = TRUE,
  prob = c(
    .05,
    .05,
    .07,
    .1,
    .1,
    .2,
    .3,
    .35,
    .3,
    .15,
    .1,
    .15,
    .20,
    .40,
    .50,
    .25,
    .1,
    .05,
    .05
  )
)
colors <- c("Mean" = "red4", "Median" = "blue4", "Mode" = "green4")
```

* **На симметричном распределении мода, медиана и среднее совпадают**

```{r central_tendency_symm, echo=FALSE}
ggplot(NULL, aes(symm)) +
  geom_histogram(aes(y = after_stat(density)), alpha =.5, binwidth = .5) +
  geom_density() +
  geom_vline(xintercept = mean(symm), color = colors['Mean']) +
  geom_vline(xintercept = median(symm), color = colors['Median']) +
  geom_vline(xintercept = median(symm)-0.04, color = colors['Mode']) +
  labs(x = 'Value',
       y = 'Density')
```


## Среднее vs медиана vs мода. Асимметричное распределение распределения

* **На асимметричном распределении мода в пике**
* **На асимметричном распределении медиана и среднее смещены в сторону хвоста. Среднее смещено сильнее медианы**

```{r central_tendency_asymm_right, echo=FALSE}
ggplot(NULL, aes(asymm_right)) +
  geom_histogram(aes(y = ..density..), alpha =.5, binwidth = .5) +
  geom_density() +
  geom_vline(xintercept = mean(asymm_right), color = colors['Mean']) +
  geom_vline(xintercept = median(asymm_right), color = colors['Median']) +
  geom_vline(xintercept = 3, color = colors['Mode']) +
  labs(x = 'Value',
       y = 'Density')
```

```{r central_tendency_asymm_left, echo=FALSE}
ggplot(NULL, aes(asymm_left)) +
  geom_histogram(aes(y = ..density..), alpha =.5, binwidth = .5) +
  geom_density() +
  geom_vline(xintercept = mean(asymm_left), color = colors['Mean']) +
  geom_vline(xintercept = median(asymm_left), color = colors['Median']) +
  geom_vline(xintercept = 7.4, color = colors['Mode']) +
  labs(x = 'Value',
       y = 'Density')
```

## Среднее и медиана. Большие значения

Есть ряд наблдюдений:

```{r marks_creating, include=FALSE}
marks <- c(6, 7, 7, 8, 8)
```
```{r marks_vector}
marks
```

Посчитаем медиану и среднее:

```{r}
median(marks)
mean(marks)
```

В ряду наблюдений появились значения, сильно отклоняющиеся от остальных:

```{r marks_creating_2, include=FALSE}
marks <- c(6, 7, 7, 8, 8, 3, 4)
```
```{r marks_vector_2}
marks
```

Посчитаем медиану и среднее теперь:

```{r}
median(marks)
mean(marks)
```

## Мода vs медиана vs среднее. Бимодальное распределение

```{r central_tendency_bimodal, echo=FALSE}
ggplot(NULL, aes(bimodal)) +
  geom_histogram(aes(y = ..density..), alpha =.5, binwidth = .5) +
  geom_density() +
  geom_vline(xintercept = mean(bimodal), color = 'red4') +
  geom_vline(xintercept = median(bimodal), color = 'blue4') +
  geom_vline(xintercept = 7.8, color = 'green4') +
  labs(x = 'Value',
       y = 'Density')
```


## Меры разброса

```{r distributions_with_the_same_means_generation}
set.seed(123)
tibble(id = 1:100,
       x1 = rnorm(100, mean = 2, sd = 1),
       x2 = rnorm(100, mean = 2, sd = 3),
       x3 = rnorm(100, mean = 2, sd = 0.5)) -> rnorm_three
```

```{r creating_labeller, include=FALSE}
la <- c(x1 = "Variable 1", x2 = "Variable 2", x3 = "Variable 3")
```

```{r distributions_with_the_same_means_vis, echo=FALSE}
rnorm_three %>% 
  pivot_longer(cols = c("x1", "x2", "x3")) %>% 
  ggplot(aes(value)) +
  geom_histogram(binwidth = .5) +
  facet_wrap(~ name,
             labeller = labeller(name = la)) +
  labs(x = "Value",
       y = "Count") +
  scale_x_continuous(breaks = -5:15)
```

## Меры разброса. Зачем?

```{r distributions_with_the_same_means_mean, echo=FALSE}
rnorm_three %>% 
  pivot_longer(cols = c("x1", "x2", "x3")) %>% 
  ggplot(aes(value)) +
  geom_histogram(binwidth = .5) +
  geom_vline(xintercept = 2, size = 1) +
  facet_wrap(~ name,
             labeller = labeller(name = la)) +
  labs(x = "Value",
       y = "Count") +
  scale_x_continuous(breaks = -5:15)
```


## Минимум, максимум, размах

```{r anat_marks_gen, include=FALSE}
set.seed(123)
anat_marks <- sample(3:10, 
                     size = 30,
                     replace = TRUE, 
                     prob = c(0.2, 0.5, 0.8, 0.7, 0.7, 0.5, 0.3, 0.2))
```

```{r anat_marks}
anat_marks
```

```{r min_max_anat_marks}
min(anat_marks)
max(anat_marks)
```

$$
\mathrm{range}(X) = \max(X) - \min(X)
$$

## Другой ряд наблюдений

```{r intro_to_psy_gen, include=FALSE}
set.seed(8)
intro_psy_marks <- sample(3:10, 
                     size = 30,
                     replace = TRUE, 
                     prob = c(0.1, 0.3, 0.3, 0.8, 0.8, 0.9, 0.3, 0.2))
```

```{r intro_to_psy_marks}
intro_psy_marks
```

Размах такой же, но вариативность разная.

```{r range_problem, echo=FALSE}
tibble(Anatomy = anat_marks,
       Intro = intro_psy_marks) %>%
  pivot_longer(cols = c("Anatomy", "Intro")) %>% 
  ggplot(aes(value)) +
  geom_bar() +
  facet_grid(name ~ .) +
  scale_x_continuous(breaks = 3:10) +
  scale_y_continuous(breaks = 1:10)
```


## Дисперсия

$$
d_i = \bar X - x_i
$$

$$
\bar d = \frac{1}{n} \sum_{i=1}^n \bar X - x_i
$$

$$
\disp_X = \var(X) = \sigma^2 = \frac{1}{n} \sum_{i=1}^n (\bar X - x_i)^2
$$

$$
s^2 = \frac{1}{n-1} \sum_{i=1}^n (\bar X - x_i)^2
$$

##### Степени свободы

Во всём виновата выборка.

Взглянем на формулу дисперсии: в неё входит среднее арифметическое. То есть для того, чтобы рассчитать дисперсию на выборке, *сначала* нам необходимо *на этой же выборке* рассчитать среднее. Тем самым, мы как бы «фиксируем» нашу выборку этим средним значением --- у значений нашего распределения становится меньше свободы для варьирования. Теперь свободно варьироваться могут $n-1$ наблюдение, так как последнее всегда будет возможно высчитать, исходя из среднего значения. По этой причине нам необходимо корректировать исходную формулу расчета дисперсии.


## Стандартное отклонение

$$
\sigma = \sqrt{\sigma^2} = \sqrt{\frac{1}{n} \sum_{i=1}^n (\bar X - x_i)^2}
$$

$$
s = \sqrt{s^2} = \sqrt{\frac{1}{n-1} \sum_{i=1}^n (\bar X - x_i)^2}
$$



## Свойства дисперсии и стандартного отклонения

$$
\disp_{X+c} = \disp_{X}
$$

$$
\begin{split}
\disp_{X+c} &= \frac{\sum_{i=1}^n \big((\bar X + c) - (x_i + c)\big)^2}{n-1} = \\
&= \frac{\sum_{i=1}^n \big(\bar X + c - x_i - c\big)^2}{n-1} \\
& = \frac{\sum_{i=1}^n \big(\bar X - x_i\big)^2}{n-1} = \disp_X
\end{split}
$$

$$
\disp_{X \cdot c} = c^2\disp_{X}
$$

$$
\disp_{X \cdot c} = \frac{\sum_{i=1}^n (c\bar X - cx_i)^2}{n-1} = \frac{\sum_{i=1}^n c^2(\bar X - x_i)^2}{n-1} = \frac{c^2 \sum_{i=1}^n (\bar X - x_i)^2}{n-1} = c^2\disp_X
$$

$$
s_{X+c} = s_X
$$

$$
s_{X+c} = \sqrt{s^2_{x+c}} = \sqrt{s^2_x} = s_x
$$


## Свойства дисперсии и стандартного отклонения

```{r creating_tibble_for_feature_sd_vis_1, include=FALSE}
smpl1 <- tibble(x1 = seq(-3, 3, by = .001),
               y1 = dnorm(x1),
               x2 = x1 + 2,
               y2 = dnorm(x2, mean = 2))
```

```{r sd_feature_1, echo=FALSE}
smpl1 %>% 
  ggplot() +
  geom_line(aes(x1, y1), color = "blue4") +
  geom_line(aes(x2, y2), color = "red4") +
  geom_vline(xintercept = 0, linetype = "dashed", color = "blue4") +
  geom_vline(xintercept = 2, linetype = "dashed", color = "red4") +
  labs(x = "Value", y = "Density")
```


## Свойства дисперсии и стандартного отклонения

$$
s_{X \cdot c} = c\cdot s_X
$$

$$
s_{X \cdot c} = \sqrt{s^2_{X \cdot c}} = \sqrt{s_X \cdot c^2} = c \cdot s_x
$$

## Свойства дисперсии и стандартного отклонения

```{r creating_tibble_for_feature_vis_4, include=FALSE}
smpl2 <- tibble(x1 = seq(-2, 4, by = .001),
               y1 = dnorm(x1, mean = 1),
               x2 = x1 * 3,
               y2 = dnorm(x2, mean = 3, sd = 3))
```

```{r sd_feature_2, echo=FALSE}
smpl2 %>% 
  ggplot() +
  geom_line(aes(x1, y1), color = "blue4") +
  geom_line(aes(x2, y2), color = "red4") +
  geom_vline(xintercept = 1, linetype = "dashed", color = "blue4") +
  geom_vline(xintercept = 3, linetype = "dashed", color = "red4") +
  labs(x = "Value", y = "Density")
```


## Квантили

```{r taia_data, include=FALSE}
taia <- read_csv("https://github.com/angelgardt/taia/raw/master/data/taia.csv")
pr_items_0 <- colnames(taia)[8:17]
co_items_0 <- colnames(taia)[18:27]
ut_items_0 <- colnames(taia)[28:39]
fa_items_0 <- colnames(taia)[40:49]
de_items_0 <- colnames(taia)[50:60]
un_items_0 <- colnames(taia)[61:72]
taia_items_0 <- colnames(taia)[8:72]
taia %>% 
  select(id, all_of(taia_items_0)) %>% 
  pivot_longer(all_of(taia_items_0),
               names_to = "subscale",
               values_to = "score") %>% 
  mutate(subscale = str_remove_all(subscale, "[:digit:]{2}") %>% toupper()) %>% 
  group_by(id, subscale) %>% 
  summarise(total_score = sum(score)) %>% 
  ungroup() %>% 
  pivot_wider(id_cols = id,
              names_from = subscale,
              values_from = total_score) %>% 
  # relocate(after = c(id, PR, CO, UT, FA, DE, UN)) %>% 
  mutate(DT = PR + CO + UT + FA + DE + UN) %>% 
  full_join(taia) -> taia
```

```{r taia_score_vis, echo=FALSE}
ggplot(taia, aes(DT)) +
  geom_histogram(binwidth = 3) +
  labs(x = "Trust in Artificial Intelligent Agents",
       y = "Count")
```


## Квантиль. Определение

**Квантиль** --- это значение переменной, которое *не превышается* с определенной вероятностью (обозначим её $p$). Иначе говоря, *слева* от значения квантиля лежит $p\%$ наблюдений.

## Квантили. Визуализация

```{r fifth_vis, echo=FALSE}
ggplot() +
  geom_histogram(data = taia, aes(DT),
                 binwidth = 3) +
  geom_histogram(data = NULL, aes(taia$DT[taia$DT < quantile(taia$DT, .05)]), 
                 binwidth = 3, fill = "green4") +
  geom_vline(xintercept = quantile(taia$DT, .05),
             size = 1.5) +
  annotate(geom = "text", label = "5%", x = 100, y = 5) +
  labs(x = "Trust in Artificial Intelligent Agents",
       y = "Count")
```

```{r 68_vis, echo=FALSE}
ggplot() +
  geom_histogram(data = taia, aes(DT),
                 binwidth = 3) +
  geom_histogram(data = NULL, aes(taia$DT[taia$DT < quantile(taia$DT, .68)]), 
                 binwidth = 3, fill = "green4") +
  geom_vline(xintercept = quantile(taia$DT, .68),
             size = 1.5) +
  annotate(geom = "text", label = "68%", x = 160, y = 10) +
  labs(x = "Trust in Artificial Intelligent Agents",
       y = "Count")
```

```{r 99_vis, echo=FALSE}
ggplot() +
  geom_histogram(data = taia, aes(DT),
                 binwidth = 3) +
  geom_histogram(data = NULL, aes(taia$DT[taia$DT < quantile(taia$DT, .99)]), 
                 binwidth = 3, fill = "green4") +
  geom_vline(xintercept = quantile(taia$DT, .99) + .5,
             size = 1.5) +
  annotate(geom = "text", label = "99%", x = 175, y = 10) +
  labs(x = "Trust in Artificial Intelligent Agents",
       y = "Count")
```


## Квартили

```{r quartiles_vis, echo=FALSE}
ggplot() +
  geom_histogram(data = taia, aes(DT),
                 binwidth = 3) +
  geom_histogram(data = NULL, aes(taia$DT[taia$DT < quantile(taia$DT, .26)]), 
                 binwidth = 3, fill = "green4") +
  geom_histogram(data = NULL, 
                 aes(taia$DT[taia$DT > quantile(taia$DT, .47) & taia$DT < quantile(taia$DT, .75)]), 
                 binwidth = 3, fill = "green4") +
  geom_histogram(data = NULL, 
                 aes(taia$DT[taia$DT > quantile(taia$DT, .25) & taia$DT < quantile(taia$DT, .51)]), 
                 binwidth = 3, fill = "blue4") +
  geom_histogram(data = NULL, 
                 aes(taia$DT[taia$DT > quantile(taia$DT, .745)]), 
                 binwidth = 3, fill = "blue4") +
  geom_vline(xintercept = quantile(taia$DT, .25),
             size = 1.5) +
  geom_vline(xintercept = quantile(taia$DT, .50),
             size = 1.5) +
  geom_vline(xintercept = quantile(taia$DT, .75),
             size = 1.5) +
  annotate(geom = "text", label = "25%", x = 135, y = 2, color = "white") +
  annotate(geom = "text", label = "25%", x = 160, y = 2, color = "white") +
  annotate(geom = "text", label = "25%", x = 182.5, y = 2, color = "white") +
  annotate(geom = "text", label = "25%", x = 205, y = 2, color = "white") +
  labs(x = "Trust in Artificial Intelligent Agents",
       y = "Count")
```

## Квартили

* слева от **первого (нижнего) квартиля** ($Q_1$, $x_{0.25}$) лежит 25% наблюдений
* слева от **второго (среднего) квартиля** ($Q_2$, $x_{0.50}$) лежит 50% наблюдений
    * а значит и справа 50% --- получается второй квартиль делит выборку пополам --- это **медиана**
* слева от **третьего (верхнего) квартиля** ($Q_3$, $x_{0.75}$) лежит 75% наблюдений


## Децили

К слову, делить выборку можно не только на четверти --- можно поделить, скажем, на 10 частей и получить **децили**. Так, слева от *первого дециля* ($x_{0.10}$) лежит 10% наблюдений, а слева от *третьего* ($x_{0.30}$) --- 30%.


## Перцентили

**Перцентили** --- значения переменной, которые делят выборку на 100 равных частей.


## Интерквартильный размах

$$
\mathrm{IQR}(X) = Q_3(X) - Q_1(X)
$$

```{r iqr_vis, echo=FALSE}
ggplot() +
  geom_histogram(data = taia, aes(DT),
                 binwidth = 3) +
  geom_histogram(data = NULL, 
                 aes(taia$DT[taia$DT > quantile(taia$DT, .25) & taia$DT < quantile(taia$DT, .75)]), 
                 binwidth = 3, fill = "blue4") +
  geom_vline(xintercept = quantile(taia$DT, .25),
             size = 1.5) +
  geom_vline(xintercept = quantile(taia$DT, .75),
             size = 1.5) +
  annotate(geom = "text", label = "50%", x = 170, y = 2, color = "white") +
  labs(x = "Trust in Artificial Intelligent Agents",
       y = "Count")
```


## Визуализация квартилей. Боксплот

```{r boxplot, echo=FALSE}
taia %>% 
  ggplot(aes(y = DT)) +
  geom_boxplot() +
  theme(axis.text.x = element_text(size = 0))
```


## Боксплот. Элементы

```{r boxplot_annotated, echo=FALSE, warning=FALSE}
taia %>% 
  ggplot(aes(y = DT)) +
  geom_boxplot() +
  theme(axis.text.x = element_text(size = 0)) +
  annotate(geom = "text", x = -.4, y = 170, label = TeX("$Q_2$")) +
  annotate(geom = "text", x = -.4, y = 200, label = TeX("$Q_3$")) +
  annotate(geom = "text", x = -.4, y = 145, label = TeX("$Q_1$")) +
  annotate(geom = "text", x = -.07, y = 95, label = TeX("$Q_1 - 1.5 IQR$")) +
  annotate(geom = "text", x = -.07, y = 245, label = TeX("$Q_3 + 1.5 IQR$"))
```


## Сравнение мер разброса

* с медианой используется мехквартильных размах
* со средним арифметическим --- стандартное отклонение
* для номинативных переменных --- число уникальных значений


## Асимметрия

$$
\skew (X) = \frac{\frac{1}{n}\sum_{i=1}^n (\bar X - x_i)^3}{\lp \frac{1}{n-1} \sum_{i=1}^n (\bar X - x_i)^2 \rp ^{3/2}}
$$

* **положительный коэффициент асимметрии (positive skew)**
    * _длинный правый хвост_
    * _преобладают низкие значения_
* **отрицательный коэфффициент асимметрии (negative skew)**
    * _длинный правый хвост_
    * _преобладают высокие значения_
* значения коэффициента асимметрии, близкие к нулю, говорят о симметричности распределения


## Асимметрия. Симметричное распределение

```{r}
median_norm_data %>% 
  ggplot(aes(x, y)) +
  geom_line() +
  labs(x = "Value", y = "Density")
```

## Левосторонняя асимметрия

```{r}
median_leftskew_data %>% 
  ggplot(aes(x, y)) +
  geom_line() +
  labs(x = "Value", y = "Density")
```

## Правосторонняя асимметрия

```{r}
median_rightskew_data %>% 
  ggplot(aes(x, y)) +
  geom_line() +
  labs(x = "Value", y = "Density")
```

## Эксцесс

$$
\kurt (X) = \frac{\frac{1}{n}\sum_{i=1}^n (\bar X - x_i)^4}{\lp \frac{1}{n-1} \sum_{i=1}^n (\bar X - x_i)^2 \rp ^{2}} - 3
$$

* **нулевой коэффициент эксцесса** обозначает такой же эксцесс, как у стандартного нормального распределения (то есть, «нормальный»)
* **положительный коэффициент эксцесса** --- более острая вершина (очень много средних значений, но мало низких и высоких)
* **отрицательный коэффициент эксцесса** --- более пологая вершина (меньше средних значений и много низких и высоких)

## Нулевой эксцесс

```{r}
ggplot() +
  geom_function(fun = dnorm, color = "black") +
  xlim(-3, 3)
```

## Положительный эксцесс

```{r}
ggplot() +
  geom_function(fun = dnorm, color = "gray") +
  geom_function(fun = dnorm, args = list(mean = 0, sd = .4), color = "black") +
  xlim(-3, 3)
```

## Отрицательный эксцесс

```{r}
ggplot() +
  geom_function(fun = dnorm, color = "gray") +
  geom_function(fun = dnorm, args = list(mean = 0, sd = 1.6), color = "black") +
  xlim(-3, 3)
```


# L7.2 // Корреляционный анализ

## Совместная изменчивость

```{r corr-data}
set.seed(414)
tibble(x1 = rnorm(100),
       x2 = 2.1 * x1 + .3 + rnorm(100)) %>% 
  mutate(relation = ifelse(x1 > mean(x1) & x2 > mean(x2) | x1 < mean(x1) & x2 < mean(x2), TRUE, FALSE)) -> cor_positive
tibble(x1 = rnorm(100),
       x2 = -1.8 * x1 + .7 + rnorm(100)) %>% 
  mutate(relation = ifelse(x1 > mean(x1) & x2 > mean(x2) | x1 < mean(x1) & x2 < mean(x2), TRUE, FALSE))-> cor_negative
tibble(x1 = rnorm(100),
       x2 = rnorm(100)) %>% 
  mutate(relation = ifelse(x1 > mean(x1) & x2 > mean(x2) | x1 < mean(x1) & x2 < mean(x2), TRUE, FALSE)) -> cor_none
```

```{r}
cor_positive %>% 
  ggplot(aes(x1, x2)) +
  geom_point() +
  labs(x = TeX("$X_1$"), y = TeX("$X_2$"))
```

## Совместная изменчивость

```{r}
cor_positive %>% 
  ggplot(aes(x1, x2)) +
  geom_point() +
  geom_vline(aes(xintercept = mean(x1)), linetype = "dashed") +
  geom_hline(aes(yintercept = mean(x2)), linetype = "dashed")+
  labs(x = TeX("$X_1$"), y = TeX("$X_2$"))
```

## Совместная изменчивость

```{r}
cor_positive %>% 
  ggplot(aes(x1, x2, color = relation)) +
  geom_point() +
  geom_vline(aes(xintercept = mean(x1)), linetype = "dashed") +
  geom_hline(aes(yintercept = mean(x2)), linetype = "dashed") + 
  scale_color_manual(values = c(`TRUE` = "blue3", `FALSE` = "red3")) +
  guides(color = "none") +
  labs(x = TeX("$X_1$"), y = TeX("$X_2$"))
```


## Совместная изменчивость

```{r}
cor_negative %>% 
  ggplot(aes(x1, x2, color = relation)) +
  geom_point() +
  geom_vline(aes(xintercept = mean(x1)), linetype = "dashed") +
  geom_hline(aes(yintercept = mean(x2)), linetype = "dashed") + 
  scale_color_manual(values = c(`TRUE` = "blue3", `FALSE` = "red3")) +
  guides(color = "none") +
  labs(x = TeX("$X_1$"), y = TeX("$X_2$"))
```

## Совместная изменчивость

```{r}
cor_none %>% 
  ggplot(aes(x1, x2, color = relation)) +
  geom_point() +
  geom_vline(aes(xintercept = mean(x1)), linetype = "dashed") +
  geom_hline(aes(yintercept = mean(x2)), linetype = "dashed") + 
  scale_color_manual(values = c(`TRUE` = "blue3", `FALSE` = "red3")) +
  guides(color = "none") +
  labs(x = TeX("$X_1$"), y = TeX("$X_2$"))
```

## Ковариация

$$
\mathrm{cov}(X_1, X_2) = \frac{1}{n} \sum_{i=1}^n (\bar X_1 - x_{i1}) (\bar X_2 - x_{i2})
$$


## Линейность взаимосвязи

<center>
<figure>
<img src="pics/Correlation_examples.png">
<figcaption>На рисунке приведены стандартизированные значения ковариации.</figcaption>
</figure>
</center>

## Недостатки ковариации

* это размерная величина, поэтому её значение зависит от единиц измерения признаков
* она зависит от дисперсий признаков, поэтому по её значению можно определить только направление связи (прямая или обратная), однако ничего нельзая сказать о силе связи

## Корреляция

$$
X_i^* = \frac{x_i - \bar X}{s}
$$

$$
\mathrm{cov}(X_1^*, X_2^*) = \frac{1}{n-1} \sum_{i=1}^n x_{i1}^* x_{i2}^* = \mathrm{corr}(X_1, X_2),
$$
где $X_1^*$ и $X_2^*$ --- стандартизированные величины $X_1$ и $X_2$ соответственно.

$$
\begin{split}
\mathrm{corr}(X_1, X_2) & = \frac{1}{n-1} \sum_{i=1}^n \Big( \frac{\bar x_1 - x_{i1}}{s_1} \Big) \Big( \frac{\bar x_2 - x_{i2}}{s_2} \Big) = \\
& = \frac{1}{s_1 s_2} \Big( \frac{1}{n-1} \sum_{i=1}^n (\bar x_1 - x_{i1})(\bar x_2 - x_{i2}) \Big) = \\
& = \frac{\mathrm{cov}(X_1, X_2)}{s_1 s_2}
\end{split}
$$

## Интерпретация коэффициента корреляции

|Значение коэффициента|Интерпретация|
|:---:|:---:|
|$-1.0$ -- $-0.9$ | очень сильная обратная связь |
|$-0.9$ -- $-0.7$ | сильная обратная связь |
|$-0.7$ -- $-0.5$ | средняя обратная связь |
|$-0.5$ -- $-0.3$ | слабая обратная связь |
|$-0.3$ -- $0.0$ | очень слабая обратная связь |
|$0.0$ -- $0.3$ | очень слабая прямая связь |
|$0.3$ -- $0.5$ | слабая прямая связь |
|$0.5$ -- $0.7$ | средняя прямая связь |
|$0.7$ -- $0.9$ | сильная прямая связь |
|$0.9$ -- $1.0$ | очень сильная прямая связь |


## Тестирование статистической значимости коэффициента корреляции {#andan-corr-test}

$$
\hat \rho_{ij} = \overline{\big( (X_{ki} - \bar X_i) (X_{kj} - \bar X_j) \big)} = r_{ij}
$$

$$
\begin{split}
H_0&: \rho_{ij} = 0 \; \text{(линейной связи нет)} \\
H_1&: \rho_{ij} \neq 0 \; \text{(наиболее частый вариант альтернативы)}
\end{split}
$$

$$
t = \frac{r_{ij}}{\sqrt{\frac{1 - r^2_{ij}}{n-2}}} \overset{H_0}{\thicksim} t(\nu = n-2)
$$


## Размер эффекта в корреляционном анализе

|Значение коэффициента | Размер эффекта |
|:---:|:---:|
| $0.1$ | Малый (small) |
|$0.3$ | Средний (medium) |
| $0.7$ | Большой (large) |


## Доверительный интервал для коэффициента корреляции

$$
\prob (\rho_{ij,\min} < \rho_{ij} < \rho_{ij,\max}) = \gamma
$$

* **z-преобразование Фишера**

$$
z(r_{ij}) = \frac{1}{2} \ln \frac{1 + r_{ij}}{1 - r_{ij}} \thicksim \mathrm{N}(\bar z_{ij}, \tfrac{1}{n-3}),
$$

где $n$ --- объём выборки, а $\bar z_{ij}$ получается расчётом по указанной формуле после подставления точечной оценки коэффициента корреляции.

$$
\prob \Big( \bar z_{ij} - t_\gamma \sqrt{\tfrac{1}{n-3}} < z_{ij, \mathrm{true}} < \bar z_{ij} + t_\gamma \sqrt{\tfrac{1}{n-3}}  \Big) = \gamma
$$


## Коэффициенты корреляции для разных шкал

|Переменная $X$|Переменная $Y$|Мера связи|
|:-:|:-:|:-:|
|Интервальная или отношений|Интервальная или отношений|Коэффициент Пирсона|
|Ранговая, интервальная или отношений|Ранговая, интервальная или отношений|Коэффициент Спирмена|
|Ранговая|Ранговая|Коэффициент Кенделла|


## Корреляционная матрица

$$
R = 
\begin{pmatrix}
1 & r_{12} & \dots & r_{1p} \\
r_{12} & 1 & \dots & r_{2p} \\
\vdots & \vdots & \ddots & \vdots \\
r_{p1} & r_{p2} & \dots & 1
\end{pmatrix}
$$

## Частная корреляция

$$
R =
\begin{pmatrix}
1 & r_{12} & r_{13} \\
r_{21} & 1 & r_{23} \\
r_{31} & r_{32} & 1
\end{pmatrix}
$$

$$
r_{12,3} = \frac{r_{12} - r_{13} \cdot r_{23}}{\sqrt{(1 - r^2_{23})(1-r^2_{13})}}
$$

$$
\begin{split}
H_0&: \rho_{12,3} = 0 \\
H_1&: \rho_{12,3} \neq 0 \\
t &= \frac{r_{12,3} \sqrt{n-3}}{\sqrt{1 - r^2_{12,3}}} \overset{H_0}{\thicksim} t(\nu = n-3)
\end{split}
$$

## Множественная корреляция

$$
R_1 = \sqrt{1 - \frac{\det R}{A_{11}}}
$$


## Другие корреляции

Можно коррелировать не только количественные и ранговые шкалы между собой, но и качественные тоже:

|Переменная $X$|Переменная $Y$|Мера связи|
|:-:|:-:|:-:|
|Дихотомическая|Дихотомическая|$\phi$-коэффициент|
|Дихотомическая|Ранговая|Рангово-бисериальный коэффициент|
|Дихотомическая|Интервальная или отношений|Бисериальный коэффициент|


## Критерий независимости Пирсона

Эмпирическая таблица частот:

||$X_1$|$X_2$|
|:-:|:-:|:-:|
|$Y_1$|$p_{X_1,Y_1} = a$|$p_{X_2,Y_1} = b$|
|$Y_2$|$p_{X_1,Y_2} = c$|$p_{X_2,Y_2} = d$|

Теоретическая таблица частот:

||$X_1^*$|$X_2^*$|
|:-:|:-:|:-:|
|$Y_1^*$|$\frac{(a+b) \times (a+c)}{N}$|$\frac{(b+a) \times (b+d)}{N}$|
|$Y_2^*$|$\frac{(c+d) \times (a+c)}{N}$|$\frac{(d+c) \times (b + d)}{N}$|

где $N = a + b + c + d$.

## Расчет критерия независимости Пирсона

$$
\begin{split}
H_0 &: p_{X_{i_1}, Y_{j_1}} = p_{X_{i_2}, Y_{j_2}}, \, i_1 \neq i_2, \, j_1 \neq j_2 \\
H_1 &: \exists i_1, i_2, j_1, j_2: p_{X_{i_1}, Y_{j_1}} \neq p_{X_{i_2}, Y_{j_2}}
\end{split}
$$

$$
\chi^2 = \sum_{i,j} \frac{p_{X_i,Y_j} - p_{X_i^*,Y_j^*}}{p_{X_i^*,Y_j^*}}
$$

## $\phi$-коэффициент

$$
\phi = \sqrt{\frac{\chi^2}{N}}
$$


## Бисериальный коэффициент корреляции

$$
r = \frac{\bar x_1 - \bar x_2}{s_Y} \sqrt{\frac{n_1 n_2}{N(N-1)}},
$$

где $\bar x_1$ --- среднее по элементам переменной $y$ из группы $x_1$, $\bar x_2$ --- среднее по элементам $y$ из группы $x_2$, $s_y$ --- стандартное отклонение по переменной $y$, $n_1$ --- число элементов в группе $x_1$, $n_2$ --- число элементов в группе $x_2$, $N$ --- общее число элементов.

*Знак коэффициента не влияет на интерпретацию*, анализируется только абсолютное значение.


## Рангово-бисериальный коэффициент корреляции

$$
r = \frac{2(\bar x_1 - \bar x_2)}{N},
$$

где $\bar x_1$ --- средний ранг в группе $x_1$, $\bar x_2$ --- средний ранг в группе $x_2$, $N$ --- общее количество наблюдений.


## Преобразование Фишера

$$
z_i = \frac{1}{2} \ln \frac{1 + r_i}{1 - r_i} = \artanh (r_i)
$$


$$
r_P = \dfrac{e^{2z_P} - 1}{e^{2z_P} + 1} = \tanh(z_P)
$$

## Итоги

- Разделили описательную статиститку и статистику вывода
- Рассмотрели и сравнили разные меры центральной тенденции
- Изучили и сопоставили разные меры разброса
- Исследовали корреляционный анализ
- Взглянули на знакомые и незнакомые коэффициенты корреляции


# L7 // Описательные статистики. Корреляционный анализ {#end}

:::: {.quarto-title-authors}
::: {.quarto-title-author}
Антон Ангельгардт
:::
::::