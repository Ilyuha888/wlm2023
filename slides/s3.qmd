---
title: "L3 // Математика для анализа данных"
author: "Антон Ангельгардт"
format: 
  revealjs:
    logo: pics/logo.png
    footer: "WLM 2023"
    theme: style.scss
    transition: fade
    scrollable: true
    smaller: false
highlight-style: github
---


## Что будет?

{{< include ../book/_symbols.qmd >}}

```{js favicon-loader}
//  <link rel="icon" type="image/x-icon" href="pics/favicon.png">

var link = document.createElement('link');
link.type = 'image/x-icon';
link.rel = 'icon';
document.head.appendChild(link);
link.href = 'pics/favicon.png';
```

- Алгебра логики и теория множеств
- Производная и интеграл
- Матрицы и работа с ними в линале



# L3.1 // Дискретная математика

## Алгебра логики

**Формальная логика --- это наука об общих структурах правильного мышления в его языковой форме**

### Высказывание

* отражает определённую объективную связь между предметами
* *истинно*, если в нём содержится адекватное отражение этой связи
* *ложно* в ином случае

## Атомарные высказывания

* элементарные высказывания, которые невозможно разделить на составляющие --- более мелкие высказывания
* могут быть **либо истинны, либо ложны**
* могут быть обозначены *пропозициональными переменными*

# Логические операции

## Инверсия, отрицание

| $p$    | $\neg p$ |
|:------:|:--------:|
| истина | ложь     |
| ложь   | истина   |

<center>
<figure>
<img src="pics/negation.png">
</figure>
</center>


## Конъюнкция, логическое умножение, логическое И

> «как $p$, так и $q$».

|   $p$  |   $q$  | $p \wedge q$ |
|:------:|:------:|:------------:|
| истина | истина | истина       |
| истина | ложь   | ложь         |
| ложь   | истина | ложь         |
| ложь   | ложь   | ложь         |


<center>
<figure>
<img src="pics/and.png">
</figure>
</center>


## Дизъюнкция, логическое сложение, логические ИЛИ

> «или $p$, или $q$, или и то и другое»

|   $p$  |   $q$  | $p \vee q$ |
|:------:|:------:|:------------:|
| истина | истина | истина       |
| истина | ложь   | истина       |
| ложь   | истина | истина       |
| ложь   | ложь   | ложь         |

<center>
<figure>
<img src="pics/or.png">
</figure>
</center>


## Разделительная дизъюнкция, исключающее ИЛИ

> «либо $p$, либо $q$»

|   $p$  |   $q$  | $p \xor q$ |
|:------:|:------:|:----------------:|
| истина | истина | ложь             |
| истина | ложь   | истина           |
| ложь   | истина | истина           |
| ложь   | ложь   | ложь             |

<center>
<figure>
<img src="pics/xor.png">
</figure>
</center>

# Условные высказывания

## Импликация

> «если $p$, то $q$»

* $p$ --- *антецедент*
* $q$ --- *консеквент*

|   $p$  |   $q$  | $p \rightarrow q$ |
|:------:|:------:|:-----------------:|
| истина | истина | истина            |
| истина | ложь   | ложь              |
| ложь   | истина | истина            |
| ложь   | ложь   | истина            |


> Из ложного утверждения может следовать любое

<center>
<figure>
<img src="pics/implication.png">
</figure>
</center>


## Репликация

> «только если $p$, то $q$»

|   $p$  |   $q$  | $p \leftarrow q$ |
|:------:|:------:|:----------------:|
| истина | истина | истина           |
| истина | ложь   | истина           |
| ложь   | истина | ложь             |
| ложь   | ложь   | истина           |


<center>
<figure>
<img src="pics/replication.png">
</figure>
</center>


## Эквиваленция

> «$p$ только тогда, когда $q$»

|   $p$  |   $q$  | $p \leftrightarrow q$ |
|:------:|:------:|:---------------------:|
| истина | истина | истина                |
| истина | ложь   | ложь                  |
| ложь   | истина | ложь                  |
| ложь   | ложь   | истина                |


<center>
<figure>
<img src="pics/equivalence.png">
</figure>
</center>


# Элементы теории множеств

## Множество

* **совокупность, или набор, некоторых (в общем случае любых) объектов**
* обозначаются заглавными латинскими буквами (например, $A$), а его элементы --- строчными латинскими буквами (например, $a_1$, $a_2$ и т.д.).

Множества удобно изображать кружочками. Примерно так:

<center>
<figure>
<img src="pics/set-a.png">
</figure>
</center>


## Множество

* Элемент может **принадлежать данному множеству**:

$$ a_i \in A $$

* Задать множество можно через перечисление элементов:

$$ B = \{ 0,1,2,3,4,5 \} $$

* Примеры множеств:
  * Множество букв русского алфавита: $L = \{ а, б, в, г, д, \dots, э, ю, я \}$
  * Множество всех натуральных чисел: $\setN = \{ 0, 1, 2, 3, \dots \}$
  * Множество всех целых чисел: $\setZ = \{0, 1, -1, 2, -2, 3, -3, \dots \}$
 


## Подмножество

<center>
<figure>
<img src="pics/set-a1.png">
</figure>
</center>

Множество $A_1 = \{a_1, a_2\}$ является **подмножеством** множества $A$:

$$
A_1 \subset A
$$

* Множество натуральных чисел включается во множество целых $\setN \subset \setZ$, и далее:

$$
\setN \subset \setZ \subset \setQ \subset \setR \subset \setC
$$

* Тривиальными подмножествами любого множества являются пустое множество $\varnothing$ и само это множество

$$
\varnothing \subset M
$$

$$
M \subset M
$$


# Операции над множествами

## Объединение

$$
A + B = A \cup B = \{ x : x \in A \vee x \in B \}
$$

<center>
<figure>
<img src="pics/union.png">
</figure>
</center>


## Пересечение

$$
A \cdot B = A \cap B = \{ x : x \in A \wedge x \in B \}
$$

<center>
<figure>
<img src="pics/intersection.png">
</figure>
</center>



## Разность множеств

$$
A ∖ B = \{ x : x \in A \wedge x \notin B \}
$$

<center>
<figure>
<img src="pics/difference.png">
</figure>
</center>


## Дополнение

$$
U ∖ A = A^c = \bar A = \{ x : x \notin A \}
$$

<center>
<figure>
<img src="pics/complement.png">
</figure>
</center>


## Симметрическая разность

$$
A \, \Delta \, B = ( A ∖ B ) \cup ( B ∖ A ) = \{ x : x \in A \xor x \in B \}
$$

<center>
<figure>
<img src="pics/symm-difference.png">
</figure>
</center>



## Декартово произведение

$$
A \times B = \{ (a,b) : a \in A, b \in B \}
$$

<center>
<figure>
<img src="pics/decart-prod.png">
</figure>
</center>



## Отображения

* сопоставляет элементы одного множества элементам другого.

Пусть $L$ --- множество букв латинского алфавита

$$
L = \{ \text{a}, \text{b}, \text{c}, \text{d},\dots, \text{x}, \text{y}, \text{z} \}
$$

а $N$ --- множество натуральных чисел от 1 до 26

$$
N = \{ 1,2,3, \dots,24,25,26 \}
$$

Тогда мы можем задать такое отображение $F$

$$
F : L \rightarrow N,
$$

где каждой букве будет соответствовать её порядковый номер в алфавите.

<center>
<figure>
<img src="pics/set-func.png">
</figure>
</center>

## Мощность множества

* характеристика, описывающая, сколько элементов содержит данное множество

Множества могут быть **конечными** и **бесконечными**.

* Если множество конечно, то его мощность равна количеству его элементов.
    * Например, множество очков, которое может выпаcть на стандартном игральном кубике --- это $S_1 = \{1,2,3,4,5,6\}$. Его мощность равна 6 --- $|S_1| = 6$.
    * Множество значений пятибалльной шкалы Ликерта --- это $S_2 = \{1, 2, 3, 4, 5\}$. Его мощность равна 5 --- $|S_2| = 5$.
* Если множество бесконечно, то надо понять, *насколько оно бесконечно*.

## Бесконечные множества

* Если можно построить отображение, в котором каждом элементу некоторого множества $S$ будет сопоставлено единственное натуральное число, то такое множество называется **счётным**.
    * Это значит, что элементов во множестве $S$ бесконечное количество --- так как количество натуральных чисел бесконечно --- однако при неограниченном количестве времени их все-таки можно пересчитать.
    * Мощность такого множетсва обозначается $\aleph_0$, то есть $|\setN| = \aleph_0$.
* Если количество элементов множества больше количества натуральных чисел, то такое множество обладает **мощностью континуума** $\aleph_1$.
    * Это множество будет равномощно множеству вещественных чисел $\setR$.



# Элементы комбинаторики

## Перестановки

Формула **числа перестановок** из $n$ элементов:

$$
P_n = n \cdot (n-1) \cdot (n-2) \cdot \ldots = n!
$$

Любые $n$ объектов можно расставить на $n$ мест $n!$ способами.

Например, для пяти элементов все возможные перестановки выглядят так:

$$
\matrix{
1 & 2 & 3 & 4 & 5 \\
1 & 2 & 3 & 5 & 4 \\
\\
1 & 2 & 4 & 3 & 5 \\
1 & 2 & 4 & 5 & 3 \\
\\
1 & 2 & 5 & 3 & 4 \\
1 & 2 & 5 & 4 & 3 \\
\\
\\
1 & 3 & 2 & 4 & 5 \\
1 & 3 & 2 & 5 & 4 \\
\\
1 & 3 & 4 & 2 & 5 \\
1 & 3 & 4 & 5 & 2 \\
\\
1 & 3 & 5 & 2 & 4 \\
1 & 3 & 5 & 4 & 2 \\
\\
\\
1 & 4 & 2 & 3 & 5 \\
1 & 4 & 2 & 5 & 3 \\
\\
1 & 4 & 3 & 2 & 5 \\
1 & 4 & 3 & 5 & 2 \\
\\
1 & 4 & 5 & 2 & 3 \\
1 & 4 & 5 & 3 & 2 \\
\\
\\
1 & 5 & 2 & 3 & 4 \\
1 & 5 & 2 & 4 & 3 \\
\\
1 & 5 & 3 & 2 & 4 \\
1 & 5 & 3 & 4 & 2 \\
\\
1 & 5 & 4 & 2 & 3 \\
1 & 5 & 4 & 3 & 2 \\
\\
\\
2 & 1 & 3 & 4 & 5 \\
2 & 1 & 3 & 5 & 4 \\
\\
2 & 1 & 4 & 3 & 5 \\
2 & 1 & 4 & 5 & 3 \\
\\
2 & 1 & 5 & 3 & 4 \\
2 & 1 & 5 & 4 & 3 \\
\\
\\
2 & 3 & 1 & 4 & 5 \\
2 & 3 & 1 & 5 & 4 \\
\\
2 & 3 & 4 & 1 & 5 \\
2 & 3 & 4 & 5 & 1 \\
\\
2 & 3 & 5 & 1 & 4 \\
2 & 3 & 5 & 4 & 1 \\
\\
\\
2 & 4 & 1 & 3 & 5 \\
2 & 4 & 1 & 5 & 3 \\
\\
2 & 4 & 3 & 1 & 5 \\
2 & 4 & 3 & 5 & 1 \\
\\
2 & 4 & 5 & 1 & 3 \\
2 & 4 & 5 & 3 & 1 \\
\\
\\
2 & 5 & 1 & 3 & 4 \\
2 & 5 & 1 & 4 & 3 \\
\\
2 & 5 & 4 & 1 & 3 \\
2 & 5 & 4 & 3 & 1 \\
\\
2 & 5 & 3 & 1 & 4 \\
2 & 5 & 3 & 4 & 1 \\
\\
\\
3 & 1 & 2 & 4 & 5 \\
3 & 1 & 2 & 5 & 4 \\
\\
3 & 1 & 4 & 2 & 5 \\
3 & 1 & 4 & 5 & 2 \\
\\
3 & 1 & 5 & 2 & 4 \\
3 & 1 & 5 & 4 & 2 \\
\\
\\
3 & 2 & 1 & 4 & 5 \\
3 & 2 & 1 & 5 & 4 \\
\\
3 & 2 & 4 & 1 & 5 \\
3 & 2 & 4 & 5 & 1 \\
\\
3 & 2 & 5 & 1 & 4 \\
3 & 2 & 5 & 4 & 1 \\
\\
\\
3 & 4 & 1 & 2 & 5 \\
3 & 4 & 1 & 5 & 2 \\
\\
3 & 4 & 2 & 1 & 5 \\
3 & 4 & 2 & 5 & 1 \\
\\
3 & 4 & 5 & 1 & 2 \\
3 & 4 & 5 & 2 & 1 \\
\\
\\
3 & 5 & 1 & 2 & 4 \\
3 & 5 & 1 & 4 & 2 \\
\\
3 & 5 & 2 & 1 & 4 \\
3 & 5 & 2 & 4 & 1 \\
\\
3 & 5 & 4 & 1 & 2 \\
3 & 5 & 4 & 2 & 1 \\
\\
\\
4 & 1 & 2 & 3 & 5 \\
4 & 1 & 2 & 5 & 3 \\
\\
4 & 1 & 3 & 2 & 5 \\
4 & 1 & 3 & 5 & 2 \\
\\
4 & 1 & 5 & 2 & 3 \\
4 & 1 & 5 & 3 & 2 \\
\\
\\
4 & 2 & 1 & 3 & 5 \\
4 & 2 & 1 & 5 & 3 \\
\\
4 & 2 & 3 & 1 & 5 \\
4 & 2 & 3 & 5 & 1 \\
\\
4 & 2 & 5 & 1 & 3 \\
4 & 2 & 5 & 3 & 1 \\
\\
\\
4 & 3 & 1 & 2 & 5 \\
4 & 3 & 1 & 5 & 2 \\
\\
4 & 3 & 2 & 1 & 5 \\
4 & 3 & 2 & 5 & 1 \\
\\
4 & 3 & 5 & 1 & 2 \\
4 & 3 & 5 & 2 & 1 \\
\\
\\
4 & 5 & 1 & 2 & 3 \\
4 & 5 & 1 & 3 & 2 \\
\\
4 & 5 & 2 & 1 & 3 \\
4 & 5 & 2 & 3 & 1 \\
\\
4 & 5 & 3 & 1 & 2 \\
4 & 5 & 3 & 2 & 1 \\
\\
\\
5 & 1 & 2 & 3 & 4 \\
5 & 1 & 2 & 4 & 3 \\
\\
5 & 1 & 3 & 2 & 4 \\
5 & 1 & 3 & 4 & 2 \\
\\
5 & 1 & 4 & 2 & 3 \\
5 & 1 & 4 & 3 & 2 \\
\\
\\
5 & 2 & 1 & 3 & 4 \\
5 & 2 & 1 & 4 & 3 \\
\\
5 & 2 & 3 & 1 & 4 \\
5 & 2 & 3 & 4 & 1 \\
\\
5 & 2 & 4 & 1 & 3 \\
5 & 2 & 4 & 3 & 1 \\
\\
\\
5 & 3 & 1 & 2 & 4 \\
5 & 3 & 1 & 4 & 2 \\
\\
5 & 3 & 2 & 1 & 4 \\
5 & 3 & 2 & 4 & 1 \\
\\
5 & 3 & 4 & 1 & 2 \\
5 & 3 & 4 & 2 & 1 \\
\\
\\
5 & 4 & 1 & 2 & 3 \\
5 & 4 & 1 & 3 & 2 \\
\\
5 & 4 & 2 & 1 & 3 \\
5 & 4 & 2 & 3 & 1 \\
\\
5 & 4 & 3 & 1 & 2 \\
5 & 4 & 3 & 2 & 1 \\
}
$$



## Размещения

Формула подсчета **числа размещений (без повторений)** из $n$ элементов по $k$ местам:

$$
A_n^k = \frac{n!}{(n-k)!}
$$

Так как $k < n$, то некоторые перестановки для нас становтся идентичны:

$$
\matrix{
1 & 2 & 3 & [4 & 5]  && 1 & 2 & 3 & [5 & 4] \\
\\
1 & 2 & 4 & [3 & 5] && 1 & 2 & 4 & [5 & 3] \\
\\
1 & 2 & 5 & [3 & 4] && 1 & 2 & 5 & [4 & 3] \\
\\
\\
1 & 3 & 2 & [4 & 5] && 1 & 3 & 2 & [5 & 4] \\
\\
1 & 3 & 4 & [2 & 5] && 1 & 3 & 4 & [5 & 2] \\
\\
1 & 3 & 5 & [2 & 4] && 1 & 3 & 5 & [4 & 2] \\
\\
\\
1 & 4 & 2 & [3 & 5] && 1 & 4 & 2 & [5 & 3] \\
\\
1 & 4 & 3 & [2 & 5] && 1 & 4 & 3 & [5 & 2] \\
\\
1 & 4 & 5 & [2 & 3] && 1 & 4 & 5 & [3 & 2] \\
\\
\\
1 & 5 & 2 & [3 & 4] && 1 & 5 & 2 & [4 & 3] \\
\\
1 & 5 & 3 & [2 & 4] && 1 & 5 & 3 & [4 & 2] \\
\\
1 & 5 & 4 & [2 & 3] && 1 & 5 & 4 & [3 & 2] \\
\\
\\
2 & 1 & 3 & [4 & 5] && 2 & 1 & 3 & [5 & 4] \\
\\
2 & 1 & 4 & [3 & 5] && 2 & 1 & 4 & [5 & 3] \\
\\
2 & 1 & 5 & [3 & 4] && 2 & 1 & 5 & [4 & 3] \\
\\
\\
2 & 3 & 1 & [4 & 5] && 2 & 3 & 1 & [5 & 4] \\
\\
2 & 3 & 4 & [1 & 5] && 2 & 3 & 4 & [5 & 1] \\
\\
2 & 3 & 5 & [1 & 4] && 2 & 3 & 5 & [4 & 1] \\
\\
\\
2 & 4 & 1 & [3 & 5] && 2 & 4 & 1 & [5 & 3] \\
\\
2 & 4 & 3 & [1 & 5] && 2 & 4 & 3 & [5 & 1] \\
\\
2 & 4 & 5 & [1 & 3] && 2 & 4 & 5 & [3 & 1] \\
\\
\\
2 & 5 & 1 & [3 & 4] && 2 & 5 & 1 & [4 & 3] \\
\\
2 & 5 & 4 & [1 & 3] && 2 & 5 & 4 & [3 & 1] \\
\\
2 & 5 & 3 & [1 & 4] && 2 & 5 & 3 & [4 & 1] \\
\\
\\
3 & 1 & 2 & [4 & 5] && 3 & 1 & 2 & [5 & 4] \\
\\
3 & 1 & 4 & [2 & 5] && 3 & 1 & 4 & [5 & 2] \\
\\
3 & 1 & 5 & [2 & 4] && 3 & 1 & 5 & [4 & 2] \\
\\
\\
3 & 2 & 1 & [4 & 5] && 3 & 2 & 1 & [5 & 4] \\
\\
3 & 2 & 4 & [1 & 5] && 3 & 2 & 4 & [5 & 1] \\
\\
3 & 2 & 5 & [1 & 4] && 3 & 2 & 5 & [4 & 1] \\
\\
\\
3 & 4 & 1 & [2 & 5] && 3 & 4 & 1 & [5 & 2] \\
\\
3 & 4 & 2 & [1 & 5] && 3 & 4 & 2 & [5 & 1] \\
\\
3 & 4 & 5 & [1 & 2] && 3 & 4 & 5 & [2 & 1] \\
\\
\\
3 & 5 & 1 & [2 & 4] && 3 & 5 & 1 & [4 & 2] \\
\\
3 & 5 & 2 & [1 & 4] && 3 & 5 & 2 & [4 & 1] \\
\\
3 & 5 & 4 & [1 & 2] && 3 & 5 & 4 & [2 & 1] \\
\\
\\
4 & 1 & 2 & [3 & 5] && 4 & 1 & 2 & [5 & 3] \\
\\
4 & 1 & 3 & [2 & 5] && 4 & 1 & 3 & [5 & 2] \\
\\
4 & 1 & 5 & [2 & 3] && 4 & 1 & 5 & [3 & 2] \\
\\
\\
4 & 2 & 1 & [3 & 5] && 4 & 2 & 1 & [5 & 3] \\
\\
4 & 2 & 3 & [1 & 5] && 4 & 2 & 3 & [5 & 1] \\
\\
4 & 2 & 5 & [1 & 3] && 4 & 2 & 5 & [3 & 1] \\
\\
\\
4 & 3 & 1 & [2 & 5] && 4 & 3 & 1 & [5 & 2] \\
\\
4 & 3 & 2 & [1 & 5] && 4 & 3 & 2 & [5 & 1] \\
\\
4 & 3 & 5 & [1 & 2] && 4 & 3 & 5 & [2 & 1] \\
\\
\\
4 & 5 & 1 & [2 & 3] && 4 & 5 & 1 & [3 & 2] \\
\\
4 & 5 & 2 & [1 & 3] && 4 & 5 & 2 & [3 & 1] \\
\\
4 & 5 & 3 & [1 & 2] && 4 & 5 & 3 & [2 & 1] \\
\\
\\
5 & 1 & 2 & [3 & 4] && 5 & 1 & 2 & [4 & 3] \\
\\
5 & 1 & 3 & [2 & 4] && 5 & 1 & 3 & [4 & 2] \\
\\
5 & 1 & 4 & [2 & 3] && 5 & 1 & 4 & [3 & 2] \\
\\
\\
5 & 2 & 1 & [3 & 4] && 5 & 2 & 1 & [4 & 3] \\
\\
5 & 2 & 3 & [1 & 4] && 5 & 2 & 3 & [4 & 1] \\
\\
5 & 2 & 4 & [1 & 3] && 5 & 2 & 4 & [3 & 1] \\
\\
\\
5 & 3 & 1 & [2 & 4] && 5 & 3 & 1 & [4 & 2] \\
\\
5 & 3 & 2 & [1 & 4] && 5 & 3 & 2 & [4 & 1] \\
\\
5 & 3 & 4 & [1 & 2] && 5 & 3 & 4 & [2 & 1] \\
\\
\\
5 & 4 & 1 & [2 & 3] && 5 & 4 & 1 & [3 & 2] \\
\\
5 & 4 & 2 & [1 & 3] && 5 & 4 & 2 & [3 & 1] \\
\\
5 & 4 & 3 & [1 & 2] && 5 & 4 & 3 & [2 & 1] \\
}
$$



## Сочетания

Формула для подсчета **числа сочетаний** из $n$ элементов по $k$:

$$
С_n^k = \frac{n!}{k!(n-k)!}
$$

Нам все равно на порядок элементов, поэтому число сочетаний меньше числа размещений в количество раз, равное числу перестановок $k!$.

Все возможные сочетания пяти элементов по три представлены ниже:

$$
\matrix {
1 & 2 & 3 && 1 & 4 & 5 \\
1 & 2 & 4 && 2 & 3 & 4 \\
1 & 2 & 5 && 2 & 3 & 5 \\
1 & 3 & 4 && 2 & 4 & 5 \\
1 & 3 & 5 && 3 & 4 & 5
}
$$




# L3.2 // Элементы математического анализа

## Последовательности

**Числовая последовательность** --- это последовательность любых чисел.

$$
(x_n)^\infty_{n=1}
$$

* $x_n$ --- это некоторый элемент последовательности
* верхний и нижний индексы обозначают границы изменения индекса $n$. 

Например, $\langle 1,-1,1,-1,\dots \rangle$ --- это числовая последовательность, которую можно обозначить $\big( (-1)^n \big)^\infty_{n=1}$.


## Монотонная последовательность

* это последовательность, которая 
   * *не возрастает* --- то есть стоит на месте или убывает
   * или *не убывает* --- то есть стоит на месте или возрастает



## Предел последовательности

Если существует такой объект (число), к которому элементы последовательности приближаются с ростом номера, то он является **пределом этой последовательности**.

Пусть есть последовательность:

$$
\Big( \frac{1}{n} \Big)^{\infty}_{n=1} = \Big \langle 1, \frac{1}{2}, \frac{1}{3}, \dots \Big \rangle
$$
 

* каждый следующий её элемент, меньше предыдущего
* отрицательными элементы данной последовательности быть не могут
* когда-то последовательность упрётся в ноль.


## Формальное определение предела последовательности

Число $a$ называется **пределом последовательности** $\{x_n\}$, если для любого положительного числа $\varepsilon$ существует номер $N_\varepsilon$, такой что для любого $n > N_\varepsilon$, выполняется равенство $|x_n - a| < \varepsilon$, или на математическом:

$$
\lim_{n \rightarrow \infty} x_n = a \Leftrightarrow \forall \varepsilon > 0 \, \, \exists N_\varepsilon \in \setN: n \geq N_\varepsilon, |x_n - a| < \varepsilon
$$



## Функции

* **Функция** устанавливает соответствие между элементами двух числовых множеств.
* У любой функции есть *область определения* (множество $X$) и *область значений* (множество $Y$). Сама же функция представляет собой множество упорядоченных пар

$$
(x,y) \in X \times Y,
$$
таких что 

(1) пары существуют для всех элементов $X$, и 
(2) если первые элементы пар равны, то равны и их вторые элементы.


```{r pkgs, eval=TRUE}
library(tidyverse)
theme_set(theme_bw())
# library(latex2exp)
library(plotly)
```


## Дискретная функция

Если функция определена на множестве целых чисел $\setZ$, то она будет дискретная, так как между, например, $1$ и $2$ будет пусто.

```{r discrete-func}
tibble(x = 0:20,
       y = dbinom(x, 25, .5)) %>% 
  ggplot(aes(x, y)) +
  geom_point() +
  labs(y = "f(x)")
```


## Непрерывная функция

Если функция определена на множестве $\setR$, то она будет непрерывной. Например, функция $f(x) = x^2$ является непрерывной, как ифункции $f(x) = \sqrt{x}$ и $f(x) = \ln(x)$. Если функция непрерывная, то она дифференцируема.

```{r func-graphs}
ggplot() +
  geom_function(fun = function(x) x^2) +
  geom_function(fun = function(x) abs(x), color = "royalblue4") +
  geom_function(fun = function(x) 2 * x + 4, color = "indianred4") +
  annotate(geom = "text", label = "y = x²",
           x = 4, y = 20) +
  annotate(geom = "text", label = "y = |x|",
           x = 4, y = 6, color = "royalblue4") +
  annotate(geom = "text", label = "y = 2x + 4",
           x = 2.5, y = 11, color = "indianred4") +
  xlim(-5, 5) +
  labs(x = "x", y = "f(x)")
```


## Производная

А раз они дифференцируемы, то мы можем взять производную!

Производная показывает 

* **тангенс угла наклона касательной в данной точке**
* **скорость и направление изменения функции в данной точке**


## Логика производной

Пусть дана функция $f(x) = 2x^3 + 3x^2-4x+6$.


```{r deriv1}
ggplot() +
  geom_function(fun = function(x) 2*x^3+3*x^2-4*x+6) +
  xlim(-3, 5) +
  labs(x = "x",
       y = "f(x)")
```

## Логика производной

Выберем точку $x_0$, в которой мы хотим определить, куда и с какой скоростью движется наша функция. В этой точке функция имеет значение $y_0$:

```{r deriv2}
ggplot() +
  geom_function(fun = function(x) 2*x^3+3*x^2-4*x+6) +
  geom_vline(xintercept = 2, linetype = "dashed") +
  annotate(geom = "text", label = "x₀",
           x = 2.2, y = 0) +
  geom_hline(yintercept = 26, linetype = "dashed") +
  annotate(geom = "text", label = "y₀",
           x = 0, y = 35) +
  xlim(-3, 5) +
  labs(x = "x",
       y = "f(x)")
```


## Логика производной

Шагнём на некоторую дистанцию $\Delta x$ вправо (по направлению оси $x$). Назовём эту дистанцию *приращением аргумента*. В точке $x_0 + \Delta x$ фунция будет иметь какое-то значение $y_0 + \Delta y$, где $\Delta y$ --- *приращение функции*.

```{r deriv3}
ggplot() +
  geom_function(fun = function(x) 2*x^3+3*x^2-4*x+6) +
  geom_vline(xintercept = 2, linetype = "dashed") +
  annotate(geom = "text", label = "x₀",
           x = 2.2, y = 0) +
  geom_vline(xintercept = 3, linetype = "dashed") +
  annotate(geom = "text", label = "x₀ + Δx",
           x = 3.5, y = 0) +
  geom_hline(yintercept = 26, linetype = "dashed") +
  annotate(geom = "text", label = "y₀",
           x = 0, y = 35) +
  geom_hline(yintercept = 75, linetype = "dashed") +
  annotate(geom = "text", label = "y₀ + Δy",
           x = 0, y = 90) +
  xlim(-3, 5) +
  labs(x = "x",
       y = "f(x)")
```


## Логика производной

Наша функция движется из точки $(x_0,y_0)$ в точку $(x_0 + \Delta x, y_0 + \Delta y)$. Имеем следующий треугольник:

```{r deriv4}
ggplot() +
  geom_function(fun = function(x) 2*x^3+3*x^2-4*x+6) +
  geom_vline(xintercept = 2, linetype = "dashed") +
  annotate(geom = "text", label = "x₀",
           x = 2.2, y = 0) +
  geom_vline(xintercept = 3, linetype = "dashed") +
  annotate(geom = "text", label = "x₀ + Δx",
           x = 3.5, y = 0) +
  geom_hline(yintercept = 26, linetype = "dashed") +
  annotate(geom = "text", label = "y₀",
           x = 1, y = 35) +
  geom_hline(yintercept = 75, linetype = "dashed") +
  annotate(geom = "text", label = "y₀ + Δy",
           x = 1, y = 90) +
  geom_line(aes(x = c(2, 3, 3, 2),
                y = c(26, 75, 26, 26)),
            size = 1, color = "indianred4") +
  geom_line(aes(x = c(3, 3),
                y = c(75, 26)),
            size = 1, color = "indianred4") +
  geom_line(aes(x = c(2, 3),
                y = c(26, 26)),
            size = 1, color = "indianred4") +
  annotate(geom = "text", label = "Δx", 
           x = 2.5, y = 18, color = "indianred4") +
  annotate(geom = "text", label = "Δy", 
           x = 3.2, y = 50, color = "indianred4") +
  annotate(geom = "text", label = "α", 
           x = 2.2, y = 30, color = "indianred4", size = 5) +
  xlim(0, 4) +
  labs(x = "x",
       y = "f(x)")
```


## Логика производной

Нас интересует угол $\alpha$ --- именно он задает скорость и направление изменения функции. Если мы узнаем, каков угол $\alpha$ --- а точнее $\tan \alpha$, потому что так проще --- то узнаем, куда движется функция.

$$
\tan \alpha = \frac{\Delta y}{\Delta x}
$$

Ну, хорошо. Но мы шагали достаточно далеко от точки, которая нас интесует. Если мы будем постепенно уменьшать шаг, то получим последовательность

$$
\langle \tan \alpha_1, \tan \alpha_2, \tan \alpha_3, ... \rangle
$$

## Логика производной

У этой последовательности есть предел, и если мы его рассчитаем, то как раз и получим значение производной в данной точке.

$$
f'(x_0) = \lim_{\Delta x \rightarrow 0} \frac{\Delta f_(x)}{\Delta x} = \frac{df}{dx}(x_0)
$$

Очень маленькое приращение обозначается $dx$ (или $df$ , если это приращение функции). Вот мы и получили производную.


## График производной

В точках, где график производной пересекает ось $x$ --- то есть *там, где производная равна нулю* --- на исходной функции случаются точки смены монотонности --- *точки минимума* и *максимума*.

```{r deriv-graph}
ggplot() +
  geom_function(fun = function(x) 2*x^3+3*x^2-4*x+6) +
  geom_function(fun = function(x) 6*x^2+6*x-4, color = "indianred4") +
  geom_vline(xintercept = -1.5, linetype = "dashed", color = "gray50") +
  geom_vline(xintercept = 0.5, linetype = "dashed", color = "gray50") +
  xlim(-3, 5) +
  labs(x = "x",
       y = "f(x)")
```


## Функции нескольких переменных

Мы хорошо знакомы с функциями одной переменной, где некий $y$ зависит от некоего $x$ и более ни от чего не зависит. Однако в общем случае никто нам не может помешать задать следующую функцию:

$$
f(x, y) = 2x^2 + y^3
$$

Теперь у нас две переменные --- $x$ и $y$ --- и от них обоих зависит значение функции. Это даже можно изобразить:

```{r 2d-graph}
fun3 <- function(x, y) { z <- cbind(x, y); 2*z[,1]^2 + z[,2]^3}
x = seq(-3, 3, by = .1)
y = seq(-3, 3, by = .1)
z = outer(x, y, fun3)
plot_ly(x = x, y = y, z = z) %>% add_surface()
```



## Частная производная

* мы можем смотреть, как изменяются значения функции при изменении каждой переменной в отдельности
* для этого существуют **частные производные**.
* при взятии частной производной все другие переменные, по которым мы не берём производную в данный момент, считаются *константами*


## Частная производная. Пример

Рассмотрим на примере нашей функции $f(x, y) = 2x^2 + y^3$. Пусть мы хотим взять производную по $x$. Тогда мы предполагаем следующее:

$$
y = \const \Rightarrow y^3 = \const = c
$$

Фцнкция примет следующий вид:

$$
f(x, y) = 2x^2 + c,
$$

а производная по $x$ будет вычисляться следующим образом:

$$
\frac{\partial f(x, y)}{\partial x} = (2x^2 + c)' = (2x^2)' = 4x
$$


## Частная производная. Пример

Аналогично можно найти частную производную по $y$:

$$
x = \const \Rightarrow 2x^2 = \const = c
$$

$$
\frac{\partial f(x, y)}{\partial y} = (c + y^3)' = (y^3)' = 3x^2
$$

Знакомство с вычислением частной производной понадобится нам, чтобы понять, как внутри устроена линейная регрессия и ухватить идею градиентного спуска.


## Площадь под графиком

Пусть у нас есть функция $y = \sqrt{x}$. Нам надо найти площадь под её графиком на отрезке от $0$ до $3$.

```{r}
ggplot() +
  xlim(0, 5) +
  ylim(0, 5) +
  geom_function(fun = function(x) sqrt(x)) +
  geom_vline(xintercept = c(0, 3), linetype = "dashed")
```


## Площадь под графиком

Мы можем разбить этот отрезок на части размером $\Delta x$, а саму площадь на соответствующие прямоугольники. Это нам позволит оценить площадь. На рисунке ниже $\Delta x = 0.25$.

```{r integral-plot}
tibble(xmin = seq(0, 3, by = .25)[-13],
       xmax = seq(0, 3, by = .25)[-1],
       ymin = 0,
       ymax = sqrt(xmax)) -> ds_rect
ggplot() +
  xlim(0, 5) +
  ylim(0, 5) +
  geom_function(fun = function(x) sqrt(x)) +
  geom_vline(xintercept = c(0, 3), linetype = "dashed") +
  geom_rect(data = ds_rect,
            aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
            fill = "royalblue", color = "royalblue", alpha = .3)
```

## Площадь под графиком

Получается, площадь можно оценить, сложив площади всех прямоугольников:

$$
S \approx \sum_{i=1}^n y_i \Delta x
$$

Чем более узкими прямоугольники у нас будут, тем точнее мы будем знать площадь. Ниже представлены рисунки для случая $\Delta x = 0.1$ и $\Delta x = 0.05$.

```{r integral-plot01}
tibble(xmin = seq(0, 3, by = .1)[-31],
       xmax = seq(0, 3, by = .1)[-1],
       ymin = 0,
       ymax = sqrt(xmax)) -> ds_rect
ggplot() +
  xlim(0, 5) +
  ylim(0, 5) +
  geom_function(fun = function(x) sqrt(x)) +
  geom_vline(xintercept = c(0, 3), linetype = "dashed") +
  geom_rect(data = ds_rect,
            aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
            fill = "royalblue", color = "royalblue", alpha = .3)
```

```{r integral-plot005}
tibble(xmin = seq(0, 3, by = .05)[-61],
       xmax = seq(0, 3, by = .05)[-1],
       ymin = 0,
       ymax = sqrt(xmax)) -> ds_rect
ggplot() +
  xlim(0, 5) +
  ylim(0, 5) +
  geom_function(fun = function(x) sqrt(x)) +
  geom_vline(xintercept = c(0, 3), linetype = "dashed") +
  geom_rect(data = ds_rect,
            aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax),
            fill = "royalblue", color = "royalblue", alpha = .3)
```


## Определенный интеграл

Чтобы вычислить площадь точно, снова воспользуемся пределами, и определим с их помощью **определенный интеграл**:

$$
\lim_{\Delta x \rightarrow 0} \sum_{i = 1}^n y_i \Delta x = \int_a^b \sqrt{x}\,dx
$$

Определенный он потому, что мы знаем, площадь в каких границах нас интересует. Определённый интеграл --- это число.

$$
\int_0^3 \sqrt{x} \, dx \approx 3.46
$$


## Неопределенный интеграл

**Неопределённый интеграл (первообразная)** --- это такая функция $F(x)$, производная которой $F'(x)$ равняется $f(x)$, то есть исходной функции. Таким образом, справедливо равенство

$$
F'(x) = f(x)
$$

<center>
<figure>
<img src="pics/antideriv.gif">
<figcaption>Построение неопределенного интеграла</figcaption>
</figure>
</center>


$$
\int_a^b f(x) dx = F(b) - F(a)
$$





# L3.3 // Элементы линейной алгебры

## Системы линейных уравнений

$$
\cases{
a_{11}x_1 + a_{12}x_2 + \cdots + a_{1m}x_m = b_1 \\
a_{21}x_1 + a_{22}x_2 + \cdots + a_{2m}x_m = b_2 \\
\cdots \\
a_{n1}x_1 + a_{n2}x_2 + \cdots + a_{nm}x_m = b_n \\
}
$$

$$
\vm{A}\vm{x} = \vm{b}
$$

$$
\vm{A} = \pmatrix{
a_{11} & a_{12} & \cdots & a_{1m} \\
a_{21} & a_{22} & \cdots & a_{2m} \\
\vdots & \vdots & \ddots & \vdots \\
a_{n1} & a_{n2} & \cdots & a_{nm}
}
\quad
\vm{x} = \pmatrix{x_1 \\ x_2 \\ \vdots \\ x_m}
\quad
\vm{b} = \pmatrix{b_1 \\ b_2 \\ \vdots \\ b_n}
$$


## Векторы

$$
\vm{r} = \pmatrix{r_1 & r_2 & r_3 & \dots & r_n}
$$
$$
\vm{c} = \pmatrix{c_1 \\ c_2 \\ c_3 \\ \vdots \\ c_m}
$$



## Сложение векторов

$$
\vm{v} = \pmatrix{v_1 & v_2 & v_3 & \dots & v_n}
$$

$$
\vm{w} = \pmatrix{w_1 & w_2 & w_3 & \dots & w_n}
$$


$$
\vm{v} + \vm{w} = \pmatrix{v_1 + w_1 & v_2 + w_2 & v_3 + w_3 & \dots & v_n + w_n}
$$

## Умножение вектора на число

$$
\alpha \cdot \vm{v} = \pmatrix{\alpha \cdot v_1 & \alpha \cdot v_2 & \alpha \cdot v_3 & \dots & \alpha \cdot v_n}, \quad \forall \alpha \in \setR
$$


## Скалярное произведение векторов

$$
\vm{v} \cdot \vm{w} = v_1 w_1 + v_2 w_2 + v_3 w_3 + \dots + v_n w_n
$$

В результате скалярного произведения векторов получается *одно число*.


## Матрицы

$$
\vm{A} = \pmatrix{
a_{11} & a_{12} & \cdots & a_{1m} \\
a_{21} & a_{22} & \cdots & a_{2m} \\
\vdots & \vdots & \ddots & \vdots \\
a_{n1} & a_{n2} & \cdots & a_{nm}
}
$$

$$
\vm{A} = \pmatrix{
\vm{a_1} & \vm{a_2} & \cdots & \vm{a_m} \\
}
$$


$$
\vm{A} = \pmatrix{
\vm{a_1} \\ \vm{a_2} \\ \cdots \\ \vm{a_n}
}
$$


## Матрицы

Матрица характеризуется размером. В размере сначала указывается количество строк, затем --- количество столбцов. Рассматриваемая нами матрица $\vm{A}$ имеет размер $n \times m$, что можно записать как $\vm{A}_{n \times m}$.

* Если количество строк и столбцов в матрице совпадает, она называется *квадратной*.
* В матрице есть **главная диагональ** --- слева сверху вправо вниз --- и **побочная диагональ** --- справа сверху влево вниз.
* Квадратная матрица, все элементы которой, кроме стоящий на главной диагонали, равны нулю, называется *диагональной матрицей*.
* Есть две замечательные матрицы: единичная $\vm{I}$ (или $\vm{E}$) и нулевая $\vm{O}$.

$$
\vm{I} = \vm{E} = \pmatrix{
1 & 0 & \dots & 0 \\
0 & 1 & \dots & 0 \\
\vdots & \vdots & \ddots & \vdots \\
0 & 0 & \dots & 1 \\
} 
\quad
\vm{O} = \pmatrix{
0 & 0 & \dots & 0 \\
0 & 0 & \dots & 0 \\
\vdots & \vdots & \ddots & \vdots \\
0 & 0 & \dots & 0 \\
}
$$


## Сложение матриц

$$
\vm{A}_{n \times m} + \vm{B}_{n \times m} = \pmatrix {
a_{11} + b_{11} & a_{12} + b_{12} & \dots & a_{1m} + b_{1m} \\
a_{21} + b_{21} & a_{22} + b_{22} & \dots & a_{2m} + b_{2m} \\
\vdots & \vdots & \ddots & \vdots \\
a_{n1} + b_{n1} & a_{n2} + b_{n2} & \dots & a_{nm} + b_{nm} \\
}
$$


## Умножение матрицы на число

$$
\alpha \cdot \vm{A} = \pmatrix{
\alpha \cdot a_{11} & \alpha \cdot a_{12} & \alpha \cdot \cdots & a_{1m} \\
\alpha \cdot a_{21} & \alpha \cdot a_{22} & \cdots & \alpha \cdot a_{2m} \\
\vdots & \vdots & \ddots & \vdots \\
\alpha \cdot a_{n1} & \alpha \cdot a_{n2} & \cdots & \alpha \cdot a_{nm}
} \quad \forall \alpha \in \setR
$$



## Матричное умножение

* Матрицы можно матрично перемножить друг с другом, если у них **совпадают внутренние размерности**.
* Результатом перемножения $\vm{A}_{n \times k} \times \vm{B}_{k \times m}$ является матрица $\vm{C}_{n \times m}$.
* Элемент $c_{ij}$ матрицы $\vm{C}$ равен скалярному произведению $i$-го вектора-строки матрицы $\vm{A}$ и $j$-го вектора-столбца матрицы $\vm{B}$.

Визуально:

<center>
<figure>
<img src="pics/matrix-prod.png">
<figcaption>Принцип матричного умножения</figcaption>
</figure>
</center>

## Матричное умножение

Пусть есть две матрицы $\vm{A}_{n \times k} \times \vm{B}_{k \times m}$, которые выглядят следующим образом:

$$
\vm{A} = 
\pmatrix{\vm{a}_1 \\ \vm{a}_2 \\ \vdots \\ \vm{a}_n} = 
\pmatrix{
a_{11} & a_{12} & \dots & a_{1k} \\
a_{21} & a_{22} & \dots & a_{2k} \\
\vdots & \vdots & \ddots & \vdots \\
a_{n1} & a_{n2} & \dots & a_{nk}
}
$$

$$
\vm{B} = 
\pmatrix{\vm{b}_1 & \vm{b}_2 & \dots & \vm{b}_m} = 
\pmatrix{
b_{11} & b_{12} & \dots & b_{1m} \\
b_{21} & b_{22} & \dots & b_{2m} \\
\vdots & \vdots & \ddots & \vdots \\
b_{k1} & b_{k2} & \dots & b_{km}
}
$$

$$
\vm{A} \times \vm{B} = \pmatrix{
\vm{a}_1 \cdot \vm{b}_1 & \vm{a}_1 \cdot \vm{b}_2 & \dots & \vm{a}_1 \cdot \vm{b}_m \\
\vm{a}_2 \cdot \vm{b}_1 & \vm{a}_2 \cdot \vm{b}_2 & \dots & \vm{a}_2 \cdot \vm{b}_m \\
\vdots & \vdots & \ddots & \vdots \\
\vm{a}_n \cdot \vm{b}_1 & \vm{a}_n \cdot \vm{b}_2 & \dots & \vm{a}_n \cdot \vm{b}_m \\
} =
$$

$$
= \pmatrix{
(a_{11}b_{11} + a_{12}b_{21} + \dots + a_{1k}b_{k1}) & (a_{11}b_{12} + a_{12}b_{22} + \dots + a_{1k}b_{k2}) & \dots & (a_{11}b_{1m} + a_{12}b_{2m} + \dots + a_{1k}b_{km}) \\
(a_{21}b_{11} + a_{22}b_{21} + \dots + a_{2k}b_{k1}) & (a_{21}b_{12} + a_{12}b_{22} + \dots + a_{2k}b_{k2}) & \dots & (a_{21}b_{1m} + a_{22}b_{2m} + \dots + a_{2k}b_{km}) \\
\vdots & \vdots & \ddots & \vdots \\
(a_{n1}b_{11} + a_{n2}b_{21} + \dots + a_{nk}b_{k1}) & (a_{n1}b_{12} + a_{n2}b_{22} + \dots + a_{nk}b_{k2}) & \dots & (a_{n1}b_{1m} + a_{n2}b_{2m} + \dots + a_{nk}b_{km}) \\
} =
$$

$$
= \pmatrix{
c_{11} & c_{12} & \dots & c_{1m} \\
c_{21} & c_{22} & \dots & c_{2m} \\
\vdots & \vdots & \ddots & \vdots \\
c_{n1} & c_{n2} & \dots & c_{nm}
} = \vm{C}
$$

$$
c_{ij} = \sum_{t=1}^k a_{it}b_{tj}
$$


## Свойства матричного умножения

1. Ассоциативность: $\vm{A}(\vm{B}\vm{C}) = (\vm{A}\vm{B})\vm{C}$ и $\alpha(\vm{A}\vm{B}) = (\alpha\vm{A})\vm{B} = \vm{A}(\alpha\vm{B})$
1. Дистрибутивность: $\vm{A}(\vm{B} + \vm{C}) = \vm{A}\vm{B} + \vm{B}\vm{C}$ и $(\vm{A} + \vm{B})\vm{C} = \vm{A}\vm{C} + \vm{B}\vm{C}$
1. Отсутствие коммутативности: в общем случае $\vm{A}\vm{B} \neq \vm{B}\vm{A}$
1. Умножение на единичный элемент: $\vm{I}\vm{A} = \vm{A}$, $\vm{A}\vm{I} = \vm{A}$
1. Умножение на нулевой элемент: $\vm{O}\vm{A} = \vm{O}$, $\vm{A}\vm{O} = \vm{O}$
1. Умножение на обратный элемент --- выполняется только для некоторых квадратных матриц (см. [ниже](#l3_det)): $\vm{A}\vm{A}^{-1} = \vm{A}^{-1}\vm{A} = \vm{I}$


## Транспонирование матрицы

$$
\vm{A} = 
\pmatrix{\vm{a}_1 & \vm{a}_2 & \dots & \vm{a}_n} = 
\pmatrix{
a_{11} & a_{12} & \dots & a_{1k} \\
a_{21} & a_{22} & \dots & a_{2k} \\
\vdots & \vdots & \ddots & \vdots \\
a_{n1} & a_{n2} & \dots & a_{nk}
}
$$

$$
\vm{A}^T = 
\pmatrix{\vm{a}_1 \\ \vm{a}_2 \\ \vdots \\ \vm{a}_n} = 
\pmatrix{
a_{11} & a_{21} & \dots & a_{n1} \\
a_{12} & a_{22} & \dots & a_{n2} \\
\vdots & \vdots & \ddots & \vdots \\
a_{1k} & a_{2k} & \dots & a_{nk}
}
$$


## Определитель и обратная матрица

**Определитель (детерминант) матрицы** $\det \vm{A}$, $|\vm{A}|$, $\Delta A$ --- это величина, которая «определяет» свойства матрицы, в том числе одно из ключевых --- её **обратимость**.

* Если матрица *не является квадратной*, то детерминант *не определен*.
* Если детерминант матрицы *не равен нулю*, то:
    * система линейных уравнений, задаваемая данной матрицей имеет единственное решение
    * для данной матрицы существует обратная матрица, обладающая следующим свойством --- $\vm{A}\vm{A}^{-1} = \vm{I}$.
* Если детерминан матрицы *равен нулю*, то система линейных уравнений имеет несколько решений.
    * Одной из причин может быть линейная зависимость между столбцами или строками матрицы --- то есть ситуация, при который один из столбцов (одна из строк) линейной выражается через другой (другую).



## След матрицы

**След матрицы** --- это сумма элементов главной диагонали (квадратной) матрицы.

$$
\text{tr}(\vm{A}) = \sum_i a_{ii}
$$



## Итоги

- Выяснили логические основы всего
- Узнали, что можно делать со множествами
- Разобрались с производной и интегралом
- Познали матрицы


# L3 // Математика для анализа данных {#end}

:::: {.quarto-title-authors}
::: {.quarto-title-author}
Антон Ангельгардт
:::
::::